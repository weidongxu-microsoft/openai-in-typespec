// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai;

import com.openai.implementation.ModelsImpl;
import com.openai.models.DeleteModelResponse;
import com.openai.models.ListModelsResponse;
import com.openai.models.Model;
import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.ServiceClient;
import io.clientcore.core.http.exception.HttpResponseException;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;

/**
 * Initializes a new instance of the synchronous Models type.
 */
@ServiceClient(builder = OpenAIClientBuilder.class)
public final class ModelsClient {
    @Metadata(generated = true)
    private final ModelsImpl serviceClient;

    /**
     * Initializes an instance of ModelsClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Metadata(generated = true)
    ModelsClient(ModelsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Lists the currently available models, and provides basic information about each one such as the
     * owner and availability.
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<ListModelsResponse> listModelsWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.listModelsWithResponse(requestOptions);
    }

    /**
     * Retrieves a model instance, providing basic information about the model such as the owner and
     * permissioning.
     * 
     * @param model The ID of the model to use for this request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return describes an OpenAI model offering that can be used with the API.
     */
    @Metadata(generated = true)
    public Response<Model> retrieveModelWithResponse(String model, RequestOptions requestOptions) {
        return this.serviceClient.retrieveModelWithResponse(model, requestOptions);
    }

    /**
     * Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
     * 
     * @param model The model to delete.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<DeleteModelResponse> deleteModelWithResponse(String model, RequestOptions requestOptions) {
        return this.serviceClient.deleteModelWithResponse(model, requestOptions);
    }

    /**
     * Lists the currently available models, and provides basic information about each one such as the
     * owner and availability.
     * 
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Metadata(generated = true)
    public ListModelsResponse listModels() {
        // Generated convenience method for listModelsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return listModelsWithResponse(requestOptions).getValue();
    }

    /**
     * Retrieves a model instance, providing basic information about the model such as the owner and
     * permissioning.
     * 
     * @param model The ID of the model to use for this request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes an OpenAI model offering that can be used with the API.
     */
    @Metadata(generated = true)
    public Model retrieveModel(String model) {
        // Generated convenience method for retrieveModelWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return retrieveModelWithResponse(model, requestOptions).getValue();
    }

    /**
     * Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
     * 
     * @param model The model to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Metadata(generated = true)
    public DeleteModelResponse deleteModel(String model) {
        // Generated convenience method for deleteModelWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return deleteModelWithResponse(model, requestOptions).getValue();
    }
}
