// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The MessageDeltaContentTextObjectText model.
 */
@Immutable
public final class MessageDeltaContentTextObjectText implements JsonSerializable<MessageDeltaContentTextObjectText> {
    /*
     * The data that makes up the text.
     */
    @Generated
    private String value;

    /*
     * The annotations property.
     */
    @Generated
    private List<MessageDeltaTextContentAnnotation> annotations;

    /**
     * Creates an instance of MessageDeltaContentTextObjectText class.
     */
    @Generated
    private MessageDeltaContentTextObjectText() {
    }

    /**
     * Get the value property: The data that makes up the text.
     * 
     * @return the value value.
     */
    @Generated
    public String getValue() {
        return this.value;
    }

    /**
     * Get the annotations property: The annotations property.
     * 
     * @return the annotations value.
     */
    @Generated
    public List<MessageDeltaTextContentAnnotation> getAnnotations() {
        return this.annotations;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("value", this.value);
        jsonWriter.writeArrayField("annotations", this.annotations, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MessageDeltaContentTextObjectText from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MessageDeltaContentTextObjectText if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the MessageDeltaContentTextObjectText.
     */
    @Generated
    public static MessageDeltaContentTextObjectText fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MessageDeltaContentTextObjectText deserializedMessageDeltaContentTextObjectText
                = new MessageDeltaContentTextObjectText();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("value".equals(fieldName)) {
                    deserializedMessageDeltaContentTextObjectText.value = reader.getString();
                } else if ("annotations".equals(fieldName)) {
                    List<MessageDeltaTextContentAnnotation> annotations
                        = reader.readArray(reader1 -> MessageDeltaTextContentAnnotation.fromJson(reader1));
                    deserializedMessageDeltaContentTextObjectText.annotations = annotations;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMessageDeltaContentTextObjectText;
        });
    }
}
