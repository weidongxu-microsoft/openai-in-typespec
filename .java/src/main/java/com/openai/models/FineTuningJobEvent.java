// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.Instant;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;

/**
 * Fine-tuning job event object.
 */
@Immutable
public final class FineTuningJobEvent implements JsonSerializable<FineTuningJobEvent> {
    /*
     * The id property.
     */
    @Generated
    private final String id;

    /*
     * The created_at property.
     */
    @Generated
    private final long createdAt;

    /*
     * The level property.
     */
    @Generated
    private final FineTuningJobEventLevel level;

    /*
     * The message property.
     */
    @Generated
    private final String message;

    /*
     * The object property.
     */
    @Generated
    private final String object = "fine_tuning.job.event";

    /**
     * Creates an instance of FineTuningJobEvent class.
     * 
     * @param id the id value to set.
     * @param createdAt the createdAt value to set.
     * @param level the level value to set.
     * @param message the message value to set.
     */
    @Generated
    private FineTuningJobEvent(String id, OffsetDateTime createdAt, FineTuningJobEventLevel level, String message) {
        this.id = id;
        if (createdAt == null) {
            this.createdAt = 0L;
        } else {
            this.createdAt = createdAt.toEpochSecond();
        }
        this.level = level;
        this.message = message;
    }

    /**
     * Get the id property: The id property.
     * 
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the createdAt property: The created_at property.
     * 
     * @return the createdAt value.
     */
    @Generated
    public OffsetDateTime getCreatedAt() {
        return OffsetDateTime.ofInstant(Instant.ofEpochSecond(this.createdAt), ZoneOffset.UTC);
    }

    /**
     * Get the level property: The level property.
     * 
     * @return the level value.
     */
    @Generated
    public FineTuningJobEventLevel getLevel() {
        return this.level;
    }

    /**
     * Get the message property: The message property.
     * 
     * @return the message value.
     */
    @Generated
    public String getMessage() {
        return this.message;
    }

    /**
     * Get the object property: The object property.
     * 
     * @return the object value.
     */
    @Generated
    public String getObject() {
        return this.object;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeLongField("created_at", this.createdAt);
        jsonWriter.writeStringField("level", this.level == null ? null : this.level.toString());
        jsonWriter.writeStringField("message", this.message);
        jsonWriter.writeStringField("object", this.object);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FineTuningJobEvent from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FineTuningJobEvent if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the FineTuningJobEvent.
     */
    @Generated
    public static FineTuningJobEvent fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            OffsetDateTime createdAt = null;
            FineTuningJobEventLevel level = null;
            String message = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("created_at".equals(fieldName)) {
                    createdAt = OffsetDateTime.ofInstant(Instant.ofEpochSecond(reader.getLong()), ZoneOffset.UTC);
                } else if ("level".equals(fieldName)) {
                    level = FineTuningJobEventLevel.fromString(reader.getString());
                } else if ("message".equals(fieldName)) {
                    message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new FineTuningJobEvent(id, createdAt, level, message);
        });
    }
}
