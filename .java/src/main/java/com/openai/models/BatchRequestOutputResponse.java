// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.core.util.BinaryData;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.Map;

/**
 * The BatchRequestOutputResponse model.
 */
@Immutable
public final class BatchRequestOutputResponse implements JsonSerializable<BatchRequestOutputResponse> {
    /*
     * The HTTP status code of the response
     */
    @Generated
    private Integer statusCode;

    /*
     * An unique identifier for the OpenAI API request. Please include this request ID when contacting support.
     */
    @Generated
    private String requestId;

    /*
     * The JSON body of the response
     */
    @Generated
    private Map<String, BinaryData> body;

    /**
     * Creates an instance of BatchRequestOutputResponse class.
     */
    @Generated
    private BatchRequestOutputResponse() {
    }

    /**
     * Get the statusCode property: The HTTP status code of the response.
     * 
     * @return the statusCode value.
     */
    @Generated
    public Integer getStatusCode() {
        return this.statusCode;
    }

    /**
     * Get the requestId property: An unique identifier for the OpenAI API request. Please include this request ID when
     * contacting support.
     * 
     * @return the requestId value.
     */
    @Generated
    public String getRequestId() {
        return this.requestId;
    }

    /**
     * Get the body property: The JSON body of the response.
     * 
     * @return the body value.
     */
    @Generated
    public Map<String, BinaryData> getBody() {
        return this.body;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeNumberField("status_code", this.statusCode);
        jsonWriter.writeStringField("request_id", this.requestId);
        jsonWriter.writeMapField("body", this.body,
            (writer, element) -> writer.writeUntyped(element == null ? null : element.toObject(Object.class)));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BatchRequestOutputResponse from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BatchRequestOutputResponse if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BatchRequestOutputResponse.
     */
    @Generated
    public static BatchRequestOutputResponse fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BatchRequestOutputResponse deserializedBatchRequestOutputResponse = new BatchRequestOutputResponse();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status_code".equals(fieldName)) {
                    deserializedBatchRequestOutputResponse.statusCode = reader.getNullable(JsonReader::getInt);
                } else if ("request_id".equals(fieldName)) {
                    deserializedBatchRequestOutputResponse.requestId = reader.getString();
                } else if ("body".equals(fieldName)) {
                    Map<String, BinaryData> body = reader.readMap(reader1 -> reader1
                        .getNullable(nonNullReader -> BinaryData.fromObject(nonNullReader.readUntyped())));
                    deserializedBatchRequestOutputResponse.body = body;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBatchRequestOutputResponse;
        });
    }
}
