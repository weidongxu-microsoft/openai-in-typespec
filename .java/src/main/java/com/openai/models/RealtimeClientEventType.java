// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.util.ExpandableEnum;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

/**
 * Defines values for RealtimeClientEventType.
 */
public final class RealtimeClientEventType implements ExpandableEnum<String> {
    private static final Map<String, RealtimeClientEventType> VALUES = new ConcurrentHashMap<>();

    /**
     * Static value session.update for RealtimeClientEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeClientEventType SESSION_UPDATE = fromString("session.update");

    /**
     * Static value input_audio_buffer.append for RealtimeClientEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeClientEventType INPUT_AUDIO_BUFFER_APPEND = fromString("input_audio_buffer.append");

    /**
     * Static value input_audio_buffer.commit for RealtimeClientEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeClientEventType INPUT_AUDIO_BUFFER_COMMIT = fromString("input_audio_buffer.commit");

    /**
     * Static value input_audio_buffer.clear for RealtimeClientEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeClientEventType INPUT_AUDIO_BUFFER_CLEAR = fromString("input_audio_buffer.clear");

    /**
     * Static value conversation.item.create for RealtimeClientEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeClientEventType CONVERSATION_ITEM_CREATE = fromString("conversation.item.create");

    /**
     * Static value conversation.item.delete for RealtimeClientEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeClientEventType CONVERSATION_ITEM_DELETE = fromString("conversation.item.delete");

    /**
     * Static value conversation.item.truncate for RealtimeClientEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeClientEventType CONVERSATION_ITEM_TRUNCATE = fromString("conversation.item.truncate");

    /**
     * Static value response.create for RealtimeClientEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeClientEventType RESPONSE_CREATE = fromString("response.create");

    /**
     * Static value response.cancel for RealtimeClientEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeClientEventType RESPONSE_CANCEL = fromString("response.cancel");

    private final String name;

    private RealtimeClientEventType(String name) {
        this.name = name;
    }

    /**
     * Creates or finds a RealtimeClientEventType.
     * 
     * @param name a name to look for.
     * @return the corresponding RealtimeClientEventType.
     */
    @Metadata(generated = true)
    public static RealtimeClientEventType fromString(String name) {
        if (name == null) {
            return null;
        }
        RealtimeClientEventType value = VALUES.get(name);
        if (value != null) {
            return value;
        }
        return VALUES.computeIfAbsent(name, key -> new RealtimeClientEventType(key));
    }

    /**
     * Gets the value of the RealtimeClientEventType instance.
     * 
     * @return the value of the RealtimeClientEventType instance.
     */
    @Metadata(generated = true)
    @Override
    public String getValue() {
        return this.name;
    }

    @Metadata(generated = true)
    @Override
    public String toString() {
        return name;
    }
}
