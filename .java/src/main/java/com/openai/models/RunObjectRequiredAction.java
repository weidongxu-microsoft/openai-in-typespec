// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The RunObjectRequiredAction model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class RunObjectRequiredAction implements JsonSerializable<RunObjectRequiredAction> {
    /*
     * For now, this is always `submit_tool_outputs`.
     */
    @Metadata(generated = true)
    private final String type = "submit_tool_outputs";

    /*
     * Details on the tool outputs needed for this run to continue.
     */
    @Metadata(generated = true)
    private final RunObjectRequiredActionSubmitToolOutputs submitToolOutputs;

    /**
     * Creates an instance of RunObjectRequiredAction class.
     * 
     * @param submitToolOutputs the submitToolOutputs value to set.
     */
    @Metadata(generated = true)
    private RunObjectRequiredAction(RunObjectRequiredActionSubmitToolOutputs submitToolOutputs) {
        this.submitToolOutputs = submitToolOutputs;
    }

    /**
     * Get the type property: For now, this is always `submit_tool_outputs`.
     * 
     * @return the type value.
     */
    @Metadata(generated = true)
    public String getType() {
        return this.type;
    }

    /**
     * Get the submitToolOutputs property: Details on the tool outputs needed for this run to continue.
     * 
     * @return the submitToolOutputs value.
     */
    @Metadata(generated = true)
    public RunObjectRequiredActionSubmitToolOutputs getSubmitToolOutputs() {
        return this.submitToolOutputs;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type);
        jsonWriter.writeJsonField("submit_tool_outputs", this.submitToolOutputs);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunObjectRequiredAction from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunObjectRequiredAction if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RunObjectRequiredAction.
     */
    @Metadata(generated = true)
    public static RunObjectRequiredAction fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RunObjectRequiredActionSubmitToolOutputs submitToolOutputs = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("submit_tool_outputs".equals(fieldName)) {
                    submitToolOutputs = RunObjectRequiredActionSubmitToolOutputs.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return new RunObjectRequiredAction(submitToolOutputs);
        });
    }
}
