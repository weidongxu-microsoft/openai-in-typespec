// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The per-line object of the batch input file.
 */
@Fluent
public final class BatchRequestInput implements JsonSerializable<BatchRequestInput> {
    /*
     * A developer-provided per-request id that will be used to match outputs to inputs. Must be unique for each request
     * in a batch.
     */
    @Generated
    private String customId;

    /*
     * The HTTP method to be used for the request. Currently only `POST` is supported.
     */
    @Generated
    private BatchRequestInputMethod method;

    /*
     * The OpenAI API relative URL to be used for the request. Currently `/v1/chat/completions`, `/v1/embeddings`, and
     * `/v1/completions` are supported.
     */
    @Generated
    private String url;

    /**
     * Creates an instance of BatchRequestInput class.
     */
    @Generated
    public BatchRequestInput() {
    }

    /**
     * Get the customId property: A developer-provided per-request id that will be used to match outputs to inputs. Must
     * be unique for each request in a batch.
     * 
     * @return the customId value.
     */
    @Generated
    public String getCustomId() {
        return this.customId;
    }

    /**
     * Set the customId property: A developer-provided per-request id that will be used to match outputs to inputs. Must
     * be unique for each request in a batch.
     * 
     * @param customId the customId value to set.
     * @return the BatchRequestInput object itself.
     */
    @Generated
    public BatchRequestInput setCustomId(String customId) {
        this.customId = customId;
        return this;
    }

    /**
     * Get the method property: The HTTP method to be used for the request. Currently only `POST` is supported.
     * 
     * @return the method value.
     */
    @Generated
    public BatchRequestInputMethod getMethod() {
        return this.method;
    }

    /**
     * Set the method property: The HTTP method to be used for the request. Currently only `POST` is supported.
     * 
     * @param method the method value to set.
     * @return the BatchRequestInput object itself.
     */
    @Generated
    public BatchRequestInput setMethod(BatchRequestInputMethod method) {
        this.method = method;
        return this;
    }

    /**
     * Get the url property: The OpenAI API relative URL to be used for the request. Currently `/v1/chat/completions`,
     * `/v1/embeddings`, and `/v1/completions` are supported.
     * 
     * @return the url value.
     */
    @Generated
    public String getUrl() {
        return this.url;
    }

    /**
     * Set the url property: The OpenAI API relative URL to be used for the request. Currently `/v1/chat/completions`,
     * `/v1/embeddings`, and `/v1/completions` are supported.
     * 
     * @param url the url value to set.
     * @return the BatchRequestInput object itself.
     */
    @Generated
    public BatchRequestInput setUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("custom_id", this.customId);
        jsonWriter.writeStringField("method", this.method == null ? null : this.method.toString());
        jsonWriter.writeStringField("url", this.url);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BatchRequestInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BatchRequestInput if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the BatchRequestInput.
     */
    @Generated
    public static BatchRequestInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BatchRequestInput deserializedBatchRequestInput = new BatchRequestInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("custom_id".equals(fieldName)) {
                    deserializedBatchRequestInput.customId = reader.getString();
                } else if ("method".equals(fieldName)) {
                    deserializedBatchRequestInput.method = BatchRequestInputMethod.fromString(reader.getString());
                } else if ("url".equals(fieldName)) {
                    deserializedBatchRequestInput.url = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBatchRequestInput;
        });
    }
}
