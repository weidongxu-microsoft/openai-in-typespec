// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The RunStepDetailsToolCallsFileSearchResultObjectContent model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class RunStepDetailsToolCallsFileSearchResultObjectContent
    implements JsonSerializable<RunStepDetailsToolCallsFileSearchResultObjectContent> {
    /*
     * The type of the content.
     */
    @Metadata(generated = true)
    private CreateTranscriptionRequestResponseFormat2 type;

    /*
     * The text content of the file.
     */
    @Metadata(generated = true)
    private String text;

    /**
     * Creates an instance of RunStepDetailsToolCallsFileSearchResultObjectContent class.
     */
    @Metadata(generated = true)
    private RunStepDetailsToolCallsFileSearchResultObjectContent() {
    }

    /**
     * Get the type property: The type of the content.
     * 
     * @return the type value.
     */
    @Metadata(generated = true)
    public CreateTranscriptionRequestResponseFormat2 getType() {
        return this.type;
    }

    /**
     * Get the text property: The text content of the file.
     * 
     * @return the text value.
     */
    @Metadata(generated = true)
    public String getText() {
        return this.text;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeStringField("text", this.text);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunStepDetailsToolCallsFileSearchResultObjectContent from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunStepDetailsToolCallsFileSearchResultObjectContent if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RunStepDetailsToolCallsFileSearchResultObjectContent.
     */
    @Metadata(generated = true)
    public static RunStepDetailsToolCallsFileSearchResultObjectContent fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            RunStepDetailsToolCallsFileSearchResultObjectContent deserializedRunStepDetailsToolCallsFileSearchResultObjectContent
                = new RunStepDetailsToolCallsFileSearchResultObjectContent();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedRunStepDetailsToolCallsFileSearchResultObjectContent.type
                        = CreateTranscriptionRequestResponseFormat2.fromString(reader.getString());
                } else if ("text".equals(fieldName)) {
                    deserializedRunStepDetailsToolCallsFileSearchResultObjectContent.text = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRunStepDetailsToolCallsFileSearchResultObjectContent;
        });
    }
}
