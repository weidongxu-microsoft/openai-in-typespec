// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ToolResourcesFileSearchIdsOnly model.
 */
@Metadata(conditions = { TypeConditions.FLUENT })
public final class ToolResourcesFileSearchIdsOnly implements JsonSerializable<ToolResourcesFileSearchIdsOnly> {
    /*
     * The [vector store](/docs/api-reference/vector-stores/object) attached to this assistant.
     * There can be a maximum of 1 vector store attached to the assistant.
     */
    @Metadata(generated = true)
    private List<String> vectorStoreIds;

    /**
     * Creates an instance of ToolResourcesFileSearchIdsOnly class.
     */
    @Metadata(generated = true)
    public ToolResourcesFileSearchIdsOnly() {
    }

    /**
     * Get the vectorStoreIds property: The [vector store](/docs/api-reference/vector-stores/object) attached to this
     * assistant.
     * There can be a maximum of 1 vector store attached to the assistant.
     * 
     * @return the vectorStoreIds value.
     */
    @Metadata(generated = true)
    public List<String> getVectorStoreIds() {
        return this.vectorStoreIds;
    }

    /**
     * Set the vectorStoreIds property: The [vector store](/docs/api-reference/vector-stores/object) attached to this
     * assistant.
     * There can be a maximum of 1 vector store attached to the assistant.
     * 
     * @param vectorStoreIds the vectorStoreIds value to set.
     * @return the ToolResourcesFileSearchIdsOnly object itself.
     */
    @Metadata(generated = true)
    public ToolResourcesFileSearchIdsOnly setVectorStoreIds(List<String> vectorStoreIds) {
        this.vectorStoreIds = vectorStoreIds;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("vector_store_ids", this.vectorStoreIds,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ToolResourcesFileSearchIdsOnly from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ToolResourcesFileSearchIdsOnly if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ToolResourcesFileSearchIdsOnly.
     */
    @Metadata(generated = true)
    public static ToolResourcesFileSearchIdsOnly fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ToolResourcesFileSearchIdsOnly deserializedToolResourcesFileSearchIdsOnly
                = new ToolResourcesFileSearchIdsOnly();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("vector_store_ids".equals(fieldName)) {
                    List<String> vectorStoreIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedToolResourcesFileSearchIdsOnly.vectorStoreIds = vectorStoreIds;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedToolResourcesFileSearchIdsOnly;
        });
    }
}
