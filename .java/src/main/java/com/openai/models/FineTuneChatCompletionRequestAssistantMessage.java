// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import io.clientcore.core.util.binarydata.BinaryData;
import java.io.IOException;
import java.util.List;

/**
 * The FineTuneChatCompletionRequestAssistantMessage model.
 */
@Metadata(conditions = { TypeConditions.FLUENT })
public final class FineTuneChatCompletionRequestAssistantMessage extends ChatCompletionRequestAssistantMessage {
    /**
     * Creates an instance of FineTuneChatCompletionRequestAssistantMessage class.
     */
    @Metadata(generated = true)
    public FineTuneChatCompletionRequestAssistantMessage() {
    }

    /**
     * Get the role property: The role of the author of this message.
     * 
     * @return the role value.
     */
    @Metadata(generated = true)
    @Override
    public String getRole() {
        // return this.role;
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public FineTuneChatCompletionRequestAssistantMessage setContent(BinaryData content) {
        super.setContent(content);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public FineTuneChatCompletionRequestAssistantMessage setRefusal(String refusal) {
        super.setRefusal(refusal);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public FineTuneChatCompletionRequestAssistantMessage setName(String name) {
        super.setName(name);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public FineTuneChatCompletionRequestAssistantMessage setToolCalls(List<ChatCompletionMessageToolCall> toolCalls) {
        super.setToolCalls(toolCalls);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public FineTuneChatCompletionRequestAssistantMessage
        setFunctionCall(ChatCompletionRequestAssistantMessageFunctionCall functionCall) {
        super.setFunctionCall(functionCall);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        // jsonWriter.writeStringField("role", this.role);
        if (getContent() != null) {
            jsonWriter.writeUntypedField("content", getContent().toObject(Object.class));
        }
        jsonWriter.writeStringField("refusal", getRefusal());
        jsonWriter.writeStringField("name", getName());
        jsonWriter.writeArrayField("tool_calls", getToolCalls(), (writer, element) -> writer.writeJson(element));
        jsonWriter.writeJsonField("function_call", getFunctionCall());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FineTuneChatCompletionRequestAssistantMessage from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FineTuneChatCompletionRequestAssistantMessage if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FineTuneChatCompletionRequestAssistantMessage.
     */
    @Metadata(generated = true)
    public static FineTuneChatCompletionRequestAssistantMessage fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FineTuneChatCompletionRequestAssistantMessage deserializedFineTuneChatCompletionRequestAssistantMessage
                = new FineTuneChatCompletionRequestAssistantMessage();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("content".equals(fieldName)) {
                    deserializedFineTuneChatCompletionRequestAssistantMessage.setContent(
                        reader.getNullable(nonNullReader -> BinaryData.fromObject(nonNullReader.readUntyped())));
                } else if ("refusal".equals(fieldName)) {
                    deserializedFineTuneChatCompletionRequestAssistantMessage.setRefusal(reader.getString());
                } else if ("name".equals(fieldName)) {
                    deserializedFineTuneChatCompletionRequestAssistantMessage.setName(reader.getString());
                } else if ("tool_calls".equals(fieldName)) {
                    List<ChatCompletionMessageToolCall> toolCalls
                        = reader.readArray(reader1 -> ChatCompletionMessageToolCall.fromJson(reader1));
                    deserializedFineTuneChatCompletionRequestAssistantMessage.setToolCalls(toolCalls);
                } else if ("function_call".equals(fieldName)) {
                    deserializedFineTuneChatCompletionRequestAssistantMessage
                        .setFunctionCall(ChatCompletionRequestAssistantMessageFunctionCall.fromJson(reader));
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFineTuneChatCompletionRequestAssistantMessage;
        });
    }
}
