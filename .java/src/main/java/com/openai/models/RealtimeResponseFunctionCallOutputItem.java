// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The RealtimeResponseFunctionCallOutputItem model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class RealtimeResponseFunctionCallOutputItem extends RealtimeResponseItem {
    /*
     * The type property.
     */
    @Metadata(generated = true)
    private RealtimeItemType type = RealtimeItemType.FUNCTION_CALL_OUTPUT;

    /*
     * The call_id property.
     */
    @Metadata(generated = true)
    private final String callId;

    /*
     * The output property.
     */
    @Metadata(generated = true)
    private final String output;

    /**
     * Creates an instance of RealtimeResponseFunctionCallOutputItem class.
     * 
     * @param id the id value to set.
     * @param callId the callId value to set.
     * @param output the output value to set.
     */
    @Metadata(generated = true)
    private RealtimeResponseFunctionCallOutputItem(String id, String callId, String output) {
        super(id);
        this.callId = callId;
        this.output = output;
    }

    /**
     * Get the type property: The type property.
     * 
     * @return the type value.
     */
    @Metadata(generated = true)
    @Override
    public RealtimeItemType getType() {
        return this.type;
    }

    /**
     * Get the callId property: The call_id property.
     * 
     * @return the callId value.
     */
    @Metadata(generated = true)
    public String getCallId() {
        return this.callId;
    }

    /**
     * Get the output property: The output property.
     * 
     * @return the output value.
     */
    @Metadata(generated = true)
    public String getOutput() {
        return this.output;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("object", getObject());
        jsonWriter.writeStringField("id", getId());
        jsonWriter.writeStringField("call_id", this.callId);
        jsonWriter.writeStringField("output", this.output);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RealtimeResponseFunctionCallOutputItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RealtimeResponseFunctionCallOutputItem if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RealtimeResponseFunctionCallOutputItem.
     */
    @Metadata(generated = true)
    public static RealtimeResponseFunctionCallOutputItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            String callId = null;
            String output = null;
            RealtimeItemType type = RealtimeItemType.FUNCTION_CALL_OUTPUT;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("call_id".equals(fieldName)) {
                    callId = reader.getString();
                } else if ("output".equals(fieldName)) {
                    output = reader.getString();
                } else if ("type".equals(fieldName)) {
                    type = RealtimeItemType.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            RealtimeResponseFunctionCallOutputItem deserializedRealtimeResponseFunctionCallOutputItem
                = new RealtimeResponseFunctionCallOutputItem(id, callId, output);
            deserializedRealtimeResponseFunctionCallOutputItem.type = type;

            return deserializedRealtimeResponseFunctionCallOutputItem;
        });
    }
}
