// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;
import java.time.Instant;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;

/**
 * The `fine_tuning.job.checkpoint` object represents a model checkpoint for a fine-tuning job that is ready to use.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class FineTuningJobCheckpoint implements JsonSerializable<FineTuningJobCheckpoint> {
    /*
     * The checkpoint identifier, which can be referenced in the API endpoints.
     */
    @Metadata(generated = true)
    private final String id;

    /*
     * The Unix timestamp (in seconds) for when the checkpoint was created.
     */
    @Metadata(generated = true)
    private final long createdAt;

    /*
     * The name of the fine-tuned checkpoint model that is created.
     */
    @Metadata(generated = true)
    private final String fineTunedModelCheckpoint;

    /*
     * The step number that the checkpoint was created at.
     */
    @Metadata(generated = true)
    private final int stepNumber;

    /*
     * Metrics at the step number during the fine-tuning job.
     */
    @Metadata(generated = true)
    private final FineTuningJobCheckpointMetrics metrics;

    /*
     * The name of the fine-tuning job that this checkpoint was created from.
     */
    @Metadata(generated = true)
    private final String fineTuningJobId;

    /*
     * The object type, which is always "fine_tuning.job.checkpoint".
     */
    @Metadata(generated = true)
    private final String object = "fine_tuning.job.checkpoint";

    /**
     * Creates an instance of FineTuningJobCheckpoint class.
     * 
     * @param id the id value to set.
     * @param createdAt the createdAt value to set.
     * @param fineTunedModelCheckpoint the fineTunedModelCheckpoint value to set.
     * @param stepNumber the stepNumber value to set.
     * @param metrics the metrics value to set.
     * @param fineTuningJobId the fineTuningJobId value to set.
     */
    @Metadata(generated = true)
    private FineTuningJobCheckpoint(String id, OffsetDateTime createdAt, String fineTunedModelCheckpoint,
        int stepNumber, FineTuningJobCheckpointMetrics metrics, String fineTuningJobId) {
        this.id = id;
        if (createdAt == null) {
            this.createdAt = 0L;
        } else {
            this.createdAt = createdAt.toEpochSecond();
        }
        this.fineTunedModelCheckpoint = fineTunedModelCheckpoint;
        this.stepNumber = stepNumber;
        this.metrics = metrics;
        this.fineTuningJobId = fineTuningJobId;
    }

    /**
     * Get the id property: The checkpoint identifier, which can be referenced in the API endpoints.
     * 
     * @return the id value.
     */
    @Metadata(generated = true)
    public String getId() {
        return this.id;
    }

    /**
     * Get the createdAt property: The Unix timestamp (in seconds) for when the checkpoint was created.
     * 
     * @return the createdAt value.
     */
    @Metadata(generated = true)
    public OffsetDateTime getCreatedAt() {
        return OffsetDateTime.ofInstant(Instant.ofEpochSecond(this.createdAt), ZoneOffset.UTC);
    }

    /**
     * Get the fineTunedModelCheckpoint property: The name of the fine-tuned checkpoint model that is created.
     * 
     * @return the fineTunedModelCheckpoint value.
     */
    @Metadata(generated = true)
    public String getFineTunedModelCheckpoint() {
        return this.fineTunedModelCheckpoint;
    }

    /**
     * Get the stepNumber property: The step number that the checkpoint was created at.
     * 
     * @return the stepNumber value.
     */
    @Metadata(generated = true)
    public int getStepNumber() {
        return this.stepNumber;
    }

    /**
     * Get the metrics property: Metrics at the step number during the fine-tuning job.
     * 
     * @return the metrics value.
     */
    @Metadata(generated = true)
    public FineTuningJobCheckpointMetrics getMetrics() {
        return this.metrics;
    }

    /**
     * Get the fineTuningJobId property: The name of the fine-tuning job that this checkpoint was created from.
     * 
     * @return the fineTuningJobId value.
     */
    @Metadata(generated = true)
    public String getFineTuningJobId() {
        return this.fineTuningJobId;
    }

    /**
     * Get the object property: The object type, which is always "fine_tuning.job.checkpoint".
     * 
     * @return the object value.
     */
    @Metadata(generated = true)
    public String getObject() {
        return this.object;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeLongField("created_at", this.createdAt);
        jsonWriter.writeStringField("fine_tuned_model_checkpoint", this.fineTunedModelCheckpoint);
        jsonWriter.writeIntField("step_number", this.stepNumber);
        jsonWriter.writeJsonField("metrics", this.metrics);
        jsonWriter.writeStringField("fine_tuning_job_id", this.fineTuningJobId);
        jsonWriter.writeStringField("object", this.object);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FineTuningJobCheckpoint from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FineTuningJobCheckpoint if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the FineTuningJobCheckpoint.
     */
    @Metadata(generated = true)
    public static FineTuningJobCheckpoint fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            OffsetDateTime createdAt = null;
            String fineTunedModelCheckpoint = null;
            int stepNumber = 0;
            FineTuningJobCheckpointMetrics metrics = null;
            String fineTuningJobId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("created_at".equals(fieldName)) {
                    createdAt = OffsetDateTime.ofInstant(Instant.ofEpochSecond(reader.getLong()), ZoneOffset.UTC);
                } else if ("fine_tuned_model_checkpoint".equals(fieldName)) {
                    fineTunedModelCheckpoint = reader.getString();
                } else if ("step_number".equals(fieldName)) {
                    stepNumber = reader.getInt();
                } else if ("metrics".equals(fieldName)) {
                    metrics = FineTuningJobCheckpointMetrics.fromJson(reader);
                } else if ("fine_tuning_job_id".equals(fieldName)) {
                    fineTuningJobId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new FineTuningJobCheckpoint(id, createdAt, fineTunedModelCheckpoint, stepNumber, metrics,
                fineTuningJobId);
        });
    }
}
