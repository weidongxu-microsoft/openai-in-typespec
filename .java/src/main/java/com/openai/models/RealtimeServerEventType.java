// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.util.ExpandableEnum;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

/**
 * Defines values for RealtimeServerEventType.
 */
public final class RealtimeServerEventType implements ExpandableEnum<String> {
    private static final Map<String, RealtimeServerEventType> VALUES = new ConcurrentHashMap<>();

    /**
     * Static value session.created for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType SESSION_CREATED = fromString("session.created");

    /**
     * Static value session.updated for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType SESSION_UPDATED = fromString("session.updated");

    /**
     * Static value conversation.created for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType CONVERSATION_CREATED = fromString("conversation.created");

    /**
     * Static value conversation.item.created for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType CONVERSATION_ITEM_CREATED = fromString("conversation.item.created");

    /**
     * Static value conversation.item.deleted for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType CONVERSATION_ITEM_DELETED = fromString("conversation.item.deleted");

    /**
     * Static value conversation.item.truncated for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType CONVERSATION_ITEM_TRUNCATED = fromString("conversation.item.truncated");

    /**
     * Static value response.created for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_CREATED = fromString("response.created");

    /**
     * Static value response.done for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_DONE = fromString("response.done");

    /**
     * Static value rate_limits.updated for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RATE_LIMITS_UPDATED = fromString("rate_limits.updated");

    /**
     * Static value response.output_item.added for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_OUTPUT_ITEM_ADDED = fromString("response.output_item.added");

    /**
     * Static value response.output_item.done for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_OUTPUT_ITEM_DONE = fromString("response.output_item.done");

    /**
     * Static value response.content_part.added for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_CONTENT_PART_ADDED = fromString("response.content_part.added");

    /**
     * Static value response.content_part.done for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_CONTENT_PART_DONE = fromString("response.content_part.done");

    /**
     * Static value response.audio.delta for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_AUDIO_DELTA = fromString("response.audio.delta");

    /**
     * Static value response.audio.done for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_AUDIO_DONE = fromString("response.audio.done");

    /**
     * Static value response.audio_transcript.delta for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_AUDIO_TRANSCRIPT_DELTA
        = fromString("response.audio_transcript.delta");

    /**
     * Static value response.audio_transcript.done for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_AUDIO_TRANSCRIPT_DONE
        = fromString("response.audio_transcript.done");

    /**
     * Static value response.text.delta for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_TEXT_DELTA = fromString("response.text.delta");

    /**
     * Static value response.text.done for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_TEXT_DONE = fromString("response.text.done");

    /**
     * Static value response.function_call_arguments.delta for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_FUNCTION_CALL_ARGUMENTS_DELTA
        = fromString("response.function_call_arguments.delta");

    /**
     * Static value response.function_call_arguments.done for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType RESPONSE_FUNCTION_CALL_ARGUMENTS_DONE
        = fromString("response.function_call_arguments.done");

    /**
     * Static value input_audio_buffer.speech_started for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType INPUT_AUDIO_BUFFER_SPEECH_STARTED
        = fromString("input_audio_buffer.speech_started");

    /**
     * Static value input_audio_buffer.speech_stopped for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType INPUT_AUDIO_BUFFER_SPEECH_STOPPED
        = fromString("input_audio_buffer.speech_stopped");

    /**
     * Static value conversation.item.input_audio_transcription.completed for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType CONVERSATION_ITEM_INPUT_AUDIO_TRANSCRIPTION_COMPLETED
        = fromString("conversation.item.input_audio_transcription.completed");

    /**
     * Static value conversation.item.input_audio_transcription.failed for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType CONVERSATION_ITEM_INPUT_AUDIO_TRANSCRIPTION_FAILED
        = fromString("conversation.item.input_audio_transcription.failed");

    /**
     * Static value input_audio_buffer.committed for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType INPUT_AUDIO_BUFFER_COMMITTED
        = fromString("input_audio_buffer.committed");

    /**
     * Static value input_audio_buffer.cleared for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType INPUT_AUDIO_BUFFER_CLEARED = fromString("input_audio_buffer.cleared");

    /**
     * Static value error for RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static final RealtimeServerEventType ERROR = fromString("error");

    private final String name;

    private RealtimeServerEventType(String name) {
        this.name = name;
    }

    /**
     * Creates or finds a RealtimeServerEventType.
     * 
     * @param name a name to look for.
     * @return the corresponding RealtimeServerEventType.
     */
    @Metadata(generated = true)
    public static RealtimeServerEventType fromString(String name) {
        if (name == null) {
            return null;
        }
        RealtimeServerEventType value = VALUES.get(name);
        if (value != null) {
            return value;
        }
        return VALUES.computeIfAbsent(name, key -> new RealtimeServerEventType(key));
    }

    /**
     * Gets the value of the RealtimeServerEventType instance.
     * 
     * @return the value of the RealtimeServerEventType instance.
     */
    @Metadata(generated = true)
    @Override
    public String getValue() {
        return this.name;
    }

    @Metadata(generated = true)
    @Override
    public String toString() {
        return name;
    }
}
