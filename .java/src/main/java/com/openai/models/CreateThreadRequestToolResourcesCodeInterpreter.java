// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The CreateThreadRequestToolResourcesCodeInterpreter model.
 */
@Metadata(conditions = { TypeConditions.FLUENT })
public final class CreateThreadRequestToolResourcesCodeInterpreter
    implements JsonSerializable<CreateThreadRequestToolResourcesCodeInterpreter> {
    /*
     * A list of [file](/docs/api-reference/files) IDs made available to the `code_interpreter` tool. There can be a
     * maximum of 20 files associated with the tool.
     */
    @Metadata(generated = true)
    private List<String> fileIds;

    /**
     * Creates an instance of CreateThreadRequestToolResourcesCodeInterpreter class.
     */
    @Metadata(generated = true)
    public CreateThreadRequestToolResourcesCodeInterpreter() {
    }

    /**
     * Get the fileIds property: A list of [file](/docs/api-reference/files) IDs made available to the
     * `code_interpreter` tool. There can be a maximum of 20 files associated with the tool.
     * 
     * @return the fileIds value.
     */
    @Metadata(generated = true)
    public List<String> getFileIds() {
        return this.fileIds;
    }

    /**
     * Set the fileIds property: A list of [file](/docs/api-reference/files) IDs made available to the
     * `code_interpreter` tool. There can be a maximum of 20 files associated with the tool.
     * 
     * @param fileIds the fileIds value to set.
     * @return the CreateThreadRequestToolResourcesCodeInterpreter object itself.
     */
    @Metadata(generated = true)
    public CreateThreadRequestToolResourcesCodeInterpreter setFileIds(List<String> fileIds) {
        this.fileIds = fileIds;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("file_ids", this.fileIds, (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateThreadRequestToolResourcesCodeInterpreter from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateThreadRequestToolResourcesCodeInterpreter if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the CreateThreadRequestToolResourcesCodeInterpreter.
     */
    @Metadata(generated = true)
    public static CreateThreadRequestToolResourcesCodeInterpreter fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CreateThreadRequestToolResourcesCodeInterpreter deserializedCreateThreadRequestToolResourcesCodeInterpreter
                = new CreateThreadRequestToolResourcesCodeInterpreter();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("file_ids".equals(fieldName)) {
                    List<String> fileIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedCreateThreadRequestToolResourcesCodeInterpreter.fileIds = fileIds;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCreateThreadRequestToolResourcesCodeInterpreter;
        });
    }
}
