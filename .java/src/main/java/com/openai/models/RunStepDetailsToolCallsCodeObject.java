// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of the Code Interpreter tool call the run step was involved in.
 */
@Immutable
public final class RunStepDetailsToolCallsCodeObject extends RunStepDetailsToolCallsObjectToolCallsObject {
    /*
     * The discriminated type identifier for the details object.
     */
    @Generated
    private String type = "code_interpreter";

    /*
     * The ID of the tool call.
     */
    @Generated
    private final String id;

    /*
     * The Code Interpreter tool call definition.
     */
    @Generated
    private final RunStepDetailsToolCallsCodeObjectCodeInterpreter codeInterpreter;

    /**
     * Creates an instance of RunStepDetailsToolCallsCodeObject class.
     * 
     * @param id the id value to set.
     * @param codeInterpreter the codeInterpreter value to set.
     */
    @Generated
    private RunStepDetailsToolCallsCodeObject(String id,
        RunStepDetailsToolCallsCodeObjectCodeInterpreter codeInterpreter) {
        this.id = id;
        this.codeInterpreter = codeInterpreter;
    }

    /**
     * Get the type property: The discriminated type identifier for the details object.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the id property: The ID of the tool call.
     * 
     * @return the id value.
     */
    @Generated
    public String getId() {
        return this.id;
    }

    /**
     * Get the codeInterpreter property: The Code Interpreter tool call definition.
     * 
     * @return the codeInterpreter value.
     */
    @Generated
    public RunStepDetailsToolCallsCodeObjectCodeInterpreter getCodeInterpreter() {
        return this.codeInterpreter;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", this.id);
        jsonWriter.writeJsonField("code_interpreter", this.codeInterpreter);
        jsonWriter.writeStringField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunStepDetailsToolCallsCodeObject from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunStepDetailsToolCallsCodeObject if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RunStepDetailsToolCallsCodeObject.
     */
    @Generated
    public static RunStepDetailsToolCallsCodeObject fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            RunStepDetailsToolCallsCodeObjectCodeInterpreter codeInterpreter = null;
            String type = "code_interpreter";
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("code_interpreter".equals(fieldName)) {
                    codeInterpreter = RunStepDetailsToolCallsCodeObjectCodeInterpreter.fromJson(reader);
                } else if ("type".equals(fieldName)) {
                    type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            RunStepDetailsToolCallsCodeObject deserializedRunStepDetailsToolCallsCodeObject
                = new RunStepDetailsToolCallsCodeObject(id, codeInterpreter);
            deserializedRunStepDetailsToolCallsCodeObject.type = type;

            return deserializedRunStepDetailsToolCallsCodeObject;
        });
    }
}
