// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.core.util.BinaryData;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The CreateModerationRequest model.
 */
@Fluent
public final class CreateModerationRequest implements JsonSerializable<CreateModerationRequest> {
    /*
     * Input (or inputs) to classify. Can be a single string, an array of strings, or
     * an array of multi-modal input objects similar to other models.
     */
    @Generated
    private final BinaryData input;

    /*
     * The content moderation model you would like to use. Learn more in
     * [the moderation guide](/docs/guides/moderation), and learn about
     * available models [here](/docs/models/moderation).
     */
    @Generated
    private CreateModerationRequestModel model;

    /**
     * Creates an instance of CreateModerationRequest class.
     * 
     * @param input the input value to set.
     */
    @Generated
    public CreateModerationRequest(BinaryData input) {
        this.input = input;
    }

    /**
     * Get the input property: Input (or inputs) to classify. Can be a single string, an array of strings, or
     * an array of multi-modal input objects similar to other models.
     * 
     * @return the input value.
     */
    @Generated
    public BinaryData getInput() {
        return this.input;
    }

    /**
     * Get the model property: The content moderation model you would like to use. Learn more in
     * [the moderation guide](/docs/guides/moderation), and learn about
     * available models [here](/docs/models/moderation).
     * 
     * @return the model value.
     */
    @Generated
    public CreateModerationRequestModel getModel() {
        return this.model;
    }

    /**
     * Set the model property: The content moderation model you would like to use. Learn more in
     * [the moderation guide](/docs/guides/moderation), and learn about
     * available models [here](/docs/models/moderation).
     * 
     * @param model the model value to set.
     * @return the CreateModerationRequest object itself.
     */
    @Generated
    public CreateModerationRequest setModel(CreateModerationRequestModel model) {
        this.model = model;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeUntypedField("input", this.input.toObject(Object.class));
        jsonWriter.writeStringField("model", this.model == null ? null : this.model.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateModerationRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateModerationRequest if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CreateModerationRequest.
     */
    @Generated
    public static CreateModerationRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BinaryData input = null;
            CreateModerationRequestModel model = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("input".equals(fieldName)) {
                    input = reader.getNullable(nonNullReader -> BinaryData.fromObject(nonNullReader.readUntyped()));
                } else if ("model".equals(fieldName)) {
                    model = CreateModerationRequestModel.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            CreateModerationRequest deserializedCreateModerationRequest = new CreateModerationRequest(input);
            deserializedCreateModerationRequest.model = model;

            return deserializedCreateModerationRequest;
        });
    }
}
