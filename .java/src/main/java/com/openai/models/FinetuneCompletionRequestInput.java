// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The per-line training example of a fine-tuning input file for completions models.
 */
@Metadata(conditions = { TypeConditions.FLUENT })
public final class FinetuneCompletionRequestInput implements JsonSerializable<FinetuneCompletionRequestInput> {
    /*
     * The input prompt for this training example.
     */
    @Metadata(generated = true)
    private String prompt;

    /*
     * The desired completion for this training example.
     */
    @Metadata(generated = true)
    private String completion;

    /**
     * Creates an instance of FinetuneCompletionRequestInput class.
     */
    @Metadata(generated = true)
    public FinetuneCompletionRequestInput() {
    }

    /**
     * Get the prompt property: The input prompt for this training example.
     * 
     * @return the prompt value.
     */
    @Metadata(generated = true)
    public String getPrompt() {
        return this.prompt;
    }

    /**
     * Set the prompt property: The input prompt for this training example.
     * 
     * @param prompt the prompt value to set.
     * @return the FinetuneCompletionRequestInput object itself.
     */
    @Metadata(generated = true)
    public FinetuneCompletionRequestInput setPrompt(String prompt) {
        this.prompt = prompt;
        return this;
    }

    /**
     * Get the completion property: The desired completion for this training example.
     * 
     * @return the completion value.
     */
    @Metadata(generated = true)
    public String getCompletion() {
        return this.completion;
    }

    /**
     * Set the completion property: The desired completion for this training example.
     * 
     * @param completion the completion value to set.
     * @return the FinetuneCompletionRequestInput object itself.
     */
    @Metadata(generated = true)
    public FinetuneCompletionRequestInput setCompletion(String completion) {
        this.completion = completion;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("prompt", this.prompt);
        jsonWriter.writeStringField("completion", this.completion);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FinetuneCompletionRequestInput from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FinetuneCompletionRequestInput if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FinetuneCompletionRequestInput.
     */
    @Metadata(generated = true)
    public static FinetuneCompletionRequestInput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FinetuneCompletionRequestInput deserializedFinetuneCompletionRequestInput
                = new FinetuneCompletionRequestInput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("prompt".equals(fieldName)) {
                    deserializedFinetuneCompletionRequestInput.prompt = reader.getString();
                } else if ("completion".equals(fieldName)) {
                    deserializedFinetuneCompletionRequestInput.completion = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFinetuneCompletionRequestInput;
        });
    }
}
