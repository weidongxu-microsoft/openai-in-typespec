// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * References an image [File](/docs/api-reference/files) in the content of a message.
 */
@Immutable
public final class MessageDeltaContentImageFileObject extends MessageDeltaContent {
    /*
     * The discriminated type identifier for the content item.
     */
    @Generated
    private String type = "image_file";

    /*
     * The index of the content part in the message.
     */
    @Generated
    private final int index;

    /*
     * The image_file property.
     */
    @Generated
    private MessageDeltaContentImageFileObjectImageFile imageFile;

    /**
     * Creates an instance of MessageDeltaContentImageFileObject class.
     * 
     * @param index the index value to set.
     */
    @Generated
    private MessageDeltaContentImageFileObject(int index) {
        this.index = index;
    }

    /**
     * Get the type property: The discriminated type identifier for the content item.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the index property: The index of the content part in the message.
     * 
     * @return the index value.
     */
    @Generated
    public int getIndex() {
        return this.index;
    }

    /**
     * Get the imageFile property: The image_file property.
     * 
     * @return the imageFile value.
     */
    @Generated
    public MessageDeltaContentImageFileObjectImageFile getImageFile() {
        return this.imageFile;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("index", this.index);
        jsonWriter.writeStringField("type", this.type);
        jsonWriter.writeJsonField("image_file", this.imageFile);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MessageDeltaContentImageFileObject from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MessageDeltaContentImageFileObject if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MessageDeltaContentImageFileObject.
     */
    @Generated
    public static MessageDeltaContentImageFileObject fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            int index = 0;
            String type = "image_file";
            MessageDeltaContentImageFileObjectImageFile imageFile = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("index".equals(fieldName)) {
                    index = reader.getInt();
                } else if ("type".equals(fieldName)) {
                    type = reader.getString();
                } else if ("image_file".equals(fieldName)) {
                    imageFile = MessageDeltaContentImageFileObjectImageFile.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            MessageDeltaContentImageFileObject deserializedMessageDeltaContentImageFileObject
                = new MessageDeltaContentImageFileObject(index);
            deserializedMessageDeltaContentImageFileObject.type = type;
            deserializedMessageDeltaContentImageFileObject.imageFile = imageFile;

            return deserializedMessageDeltaContentImageFileObject;
        });
    }
}
