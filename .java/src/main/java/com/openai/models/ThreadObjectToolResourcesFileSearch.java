// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The ThreadObjectToolResourcesFileSearch model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class ThreadObjectToolResourcesFileSearch
    implements JsonSerializable<ThreadObjectToolResourcesFileSearch> {
    /*
     * The [vector store](/docs/api-reference/vector-stores/object) attached to this thread. There can be a maximum of 1
     * vector store attached to the thread.
     */
    @Metadata(generated = true)
    private List<String> vectorStoreIds;

    /**
     * Creates an instance of ThreadObjectToolResourcesFileSearch class.
     */
    @Metadata(generated = true)
    private ThreadObjectToolResourcesFileSearch() {
    }

    /**
     * Get the vectorStoreIds property: The [vector store](/docs/api-reference/vector-stores/object) attached to this
     * thread. There can be a maximum of 1 vector store attached to the thread.
     * 
     * @return the vectorStoreIds value.
     */
    @Metadata(generated = true)
    public List<String> getVectorStoreIds() {
        return this.vectorStoreIds;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeArrayField("vector_store_ids", this.vectorStoreIds,
            (writer, element) -> writer.writeString(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ThreadObjectToolResourcesFileSearch from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ThreadObjectToolResourcesFileSearch if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ThreadObjectToolResourcesFileSearch.
     */
    @Metadata(generated = true)
    public static ThreadObjectToolResourcesFileSearch fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ThreadObjectToolResourcesFileSearch deserializedThreadObjectToolResourcesFileSearch
                = new ThreadObjectToolResourcesFileSearch();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("vector_store_ids".equals(fieldName)) {
                    List<String> vectorStoreIds = reader.readArray(reader1 -> reader1.getString());
                    deserializedThreadObjectToolResourcesFileSearch.vectorStoreIds = vectorStoreIds;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedThreadObjectToolResourcesFileSearch;
        });
    }
}
