// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Details of the message creation by the run step.
 */
@Immutable
public final class RunStepDetailsMessageCreationObject extends RunStepObjectStepDetails {
    /*
     * The discriminated type identifier for the details object.
     */
    @Generated
    private String type = "message_creation";

    /*
     * The message_creation property.
     */
    @Generated
    private final RunStepDetailsMessageCreationObjectMessageCreation messageCreation;

    /**
     * Creates an instance of RunStepDetailsMessageCreationObject class.
     * 
     * @param messageCreation the messageCreation value to set.
     */
    @Generated
    private RunStepDetailsMessageCreationObject(RunStepDetailsMessageCreationObjectMessageCreation messageCreation) {
        this.messageCreation = messageCreation;
    }

    /**
     * Get the type property: The discriminated type identifier for the details object.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the messageCreation property: The message_creation property.
     * 
     * @return the messageCreation value.
     */
    @Generated
    public RunStepDetailsMessageCreationObjectMessageCreation getMessageCreation() {
        return this.messageCreation;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("message_creation", this.messageCreation);
        jsonWriter.writeStringField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunStepDetailsMessageCreationObject from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunStepDetailsMessageCreationObject if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RunStepDetailsMessageCreationObject.
     */
    @Generated
    public static RunStepDetailsMessageCreationObject fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RunStepDetailsMessageCreationObjectMessageCreation messageCreation = null;
            String type = "message_creation";
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("message_creation".equals(fieldName)) {
                    messageCreation = RunStepDetailsMessageCreationObjectMessageCreation.fromJson(reader);
                } else if ("type".equals(fieldName)) {
                    type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            RunStepDetailsMessageCreationObject deserializedRunStepDetailsMessageCreationObject
                = new RunStepDetailsMessageCreationObject(messageCreation);
            deserializedRunStepDetailsMessageCreationObject.type = type;

            return deserializedRunStepDetailsMessageCreationObject;
        });
    }
}
