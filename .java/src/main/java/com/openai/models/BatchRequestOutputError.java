// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The BatchRequestOutputError model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class BatchRequestOutputError implements JsonSerializable<BatchRequestOutputError> {
    /*
     * A machine-readable error code.
     */
    @Metadata(generated = true)
    private String code;

    /*
     * A human-readable error message.
     */
    @Metadata(generated = true)
    private String message;

    /**
     * Creates an instance of BatchRequestOutputError class.
     */
    @Metadata(generated = true)
    private BatchRequestOutputError() {
    }

    /**
     * Get the code property: A machine-readable error code.
     * 
     * @return the code value.
     */
    @Metadata(generated = true)
    public String getCode() {
        return this.code;
    }

    /**
     * Get the message property: A human-readable error message.
     * 
     * @return the message value.
     */
    @Metadata(generated = true)
    public String getMessage() {
        return this.message;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("code", this.code);
        jsonWriter.writeStringField("message", this.message);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BatchRequestOutputError from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BatchRequestOutputError if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the BatchRequestOutputError.
     */
    @Metadata(generated = true)
    public static BatchRequestOutputError fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            BatchRequestOutputError deserializedBatchRequestOutputError = new BatchRequestOutputError();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    deserializedBatchRequestOutputError.code = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedBatchRequestOutputError.message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedBatchRequestOutputError;
        });
    }
}
