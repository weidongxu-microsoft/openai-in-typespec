// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.Generated;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The MessageContentImageUrlObjectImageUrl model.
 */
@Fluent
public final class MessageContentImageUrlObjectImageUrl
    implements JsonSerializable<MessageContentImageUrlObjectImageUrl> {
    /*
     * The external URL of the image, must be a supported image types: jpeg, jpg, png, gif, webp.
     */
    @Generated
    private final String url;

    /*
     * Specifies the detail level of the image. `low` uses fewer tokens, you can opt in to high resolution using `high`.
     * Default value is `auto`
     */
    @Generated
    private MessageContentImageUrlObjectImageUrlDetail detail;

    /**
     * Creates an instance of MessageContentImageUrlObjectImageUrl class.
     * 
     * @param url the url value to set.
     */
    @Generated
    public MessageContentImageUrlObjectImageUrl(String url) {
        this.url = url;
    }

    /**
     * Get the url property: The external URL of the image, must be a supported image types: jpeg, jpg, png, gif, webp.
     * 
     * @return the url value.
     */
    @Generated
    public String getUrl() {
        return this.url;
    }

    /**
     * Get the detail property: Specifies the detail level of the image. `low` uses fewer tokens, you can opt in to high
     * resolution using `high`. Default value is `auto`.
     * 
     * @return the detail value.
     */
    @Generated
    public MessageContentImageUrlObjectImageUrlDetail getDetail() {
        return this.detail;
    }

    /**
     * Set the detail property: Specifies the detail level of the image. `low` uses fewer tokens, you can opt in to high
     * resolution using `high`. Default value is `auto`.
     * 
     * @param detail the detail value to set.
     * @return the MessageContentImageUrlObjectImageUrl object itself.
     */
    @Generated
    public MessageContentImageUrlObjectImageUrl setDetail(MessageContentImageUrlObjectImageUrlDetail detail) {
        this.detail = detail;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("url", this.url);
        jsonWriter.writeStringField("detail", this.detail == null ? null : this.detail.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MessageContentImageUrlObjectImageUrl from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MessageContentImageUrlObjectImageUrl if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MessageContentImageUrlObjectImageUrl.
     */
    @Generated
    public static MessageContentImageUrlObjectImageUrl fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String url = null;
            MessageContentImageUrlObjectImageUrlDetail detail = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("url".equals(fieldName)) {
                    url = reader.getString();
                } else if ("detail".equals(fieldName)) {
                    detail = MessageContentImageUrlObjectImageUrlDetail.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            MessageContentImageUrlObjectImageUrl deserializedMessageContentImageUrlObjectImageUrl
                = new MessageContentImageUrlObjectImageUrl(url);
            deserializedMessageContentImageUrlObjectImageUrl.detail = detail;

            return deserializedMessageContentImageUrlObjectImageUrl;
        });
    }
}
