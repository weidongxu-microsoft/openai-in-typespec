// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The RunObjectRequiredActionSubmitToolOutputs model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class RunObjectRequiredActionSubmitToolOutputs
    implements JsonSerializable<RunObjectRequiredActionSubmitToolOutputs> {
    /*
     * A list of the relevant tool calls.
     */
    @Metadata(generated = true)
    private List<RunToolCallObject> toolCalls;

    /**
     * Creates an instance of RunObjectRequiredActionSubmitToolOutputs class.
     */
    @Metadata(generated = true)
    private RunObjectRequiredActionSubmitToolOutputs() {
    }

    /**
     * Get the toolCalls property: A list of the relevant tool calls.
     * 
     * @return the toolCalls value.
     */
    @Metadata(generated = true)
    public List<RunToolCallObject> getToolCalls() {
        return this.toolCalls;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunObjectRequiredActionSubmitToolOutputs from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunObjectRequiredActionSubmitToolOutputs if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RunObjectRequiredActionSubmitToolOutputs.
     */
    @Metadata(generated = true)
    public static RunObjectRequiredActionSubmitToolOutputs fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RunObjectRequiredActionSubmitToolOutputs deserializedRunObjectRequiredActionSubmitToolOutputs
                = new RunObjectRequiredActionSubmitToolOutputs();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("tool_calls".equals(fieldName)) {
                    List<RunToolCallObject> toolCalls
                        = reader.readArray(reader1 -> RunToolCallObject.fromJson(reader1));
                    deserializedRunObjectRequiredActionSubmitToolOutputs.toolCalls = toolCalls;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRunObjectRequiredActionSubmitToolOutputs;
        });
    }
}
