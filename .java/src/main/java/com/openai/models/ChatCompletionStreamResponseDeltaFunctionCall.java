// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The ChatCompletionStreamResponseDeltaFunctionCall model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class ChatCompletionStreamResponseDeltaFunctionCall
    implements JsonSerializable<ChatCompletionStreamResponseDeltaFunctionCall> {
    /*
     * The name property.
     */
    @Metadata(generated = true)
    private String name;

    /*
     * The arguments property.
     */
    @Metadata(generated = true)
    private String arguments;

    /**
     * Creates an instance of ChatCompletionStreamResponseDeltaFunctionCall class.
     */
    @Metadata(generated = true)
    private ChatCompletionStreamResponseDeltaFunctionCall() {
    }

    /**
     * Get the name property: The name property.
     * 
     * @return the name value.
     */
    @Metadata(generated = true)
    public String getName() {
        return this.name;
    }

    /**
     * Get the arguments property: The arguments property.
     * 
     * @return the arguments value.
     */
    @Metadata(generated = true)
    public String getArguments() {
        return this.arguments;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("arguments", this.arguments);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ChatCompletionStreamResponseDeltaFunctionCall from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ChatCompletionStreamResponseDeltaFunctionCall if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ChatCompletionStreamResponseDeltaFunctionCall.
     */
    @Metadata(generated = true)
    public static ChatCompletionStreamResponseDeltaFunctionCall fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ChatCompletionStreamResponseDeltaFunctionCall deserializedChatCompletionStreamResponseDeltaFunctionCall
                = new ChatCompletionStreamResponseDeltaFunctionCall();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("name".equals(fieldName)) {
                    deserializedChatCompletionStreamResponseDeltaFunctionCall.name = reader.getString();
                } else if ("arguments".equals(fieldName)) {
                    deserializedChatCompletionStreamResponseDeltaFunctionCall.arguments = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedChatCompletionStreamResponseDeltaFunctionCall;
        });
    }
}
