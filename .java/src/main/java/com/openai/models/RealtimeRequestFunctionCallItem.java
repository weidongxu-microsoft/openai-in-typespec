// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The RealtimeRequestFunctionCallItem model.
 */
@Metadata(conditions = { TypeConditions.FLUENT })
public final class RealtimeRequestFunctionCallItem extends RealtimeRequestItem {
    /*
     * The type property.
     */
    @Metadata(generated = true)
    private RealtimeItemType type = RealtimeItemType.FUNCTION_CALL;

    /*
     * The name property.
     */
    @Metadata(generated = true)
    private final String name;

    /*
     * The call_id property.
     */
    @Metadata(generated = true)
    private final String callId;

    /*
     * The arguments property.
     */
    @Metadata(generated = true)
    private final String arguments;

    /*
     * The status property.
     */
    @Metadata(generated = true)
    private RealtimeItemStatus status;

    /**
     * Creates an instance of RealtimeRequestFunctionCallItem class.
     * 
     * @param name the name value to set.
     * @param callId the callId value to set.
     * @param arguments the arguments value to set.
     */
    @Metadata(generated = true)
    public RealtimeRequestFunctionCallItem(String name, String callId, String arguments) {
        this.name = name;
        this.callId = callId;
        this.arguments = arguments;
    }

    /**
     * Get the type property: The type property.
     * 
     * @return the type value.
     */
    @Metadata(generated = true)
    @Override
    public RealtimeItemType getType() {
        return this.type;
    }

    /**
     * Get the name property: The name property.
     * 
     * @return the name value.
     */
    @Metadata(generated = true)
    public String getName() {
        return this.name;
    }

    /**
     * Get the callId property: The call_id property.
     * 
     * @return the callId value.
     */
    @Metadata(generated = true)
    public String getCallId() {
        return this.callId;
    }

    /**
     * Get the arguments property: The arguments property.
     * 
     * @return the arguments value.
     */
    @Metadata(generated = true)
    public String getArguments() {
        return this.arguments;
    }

    /**
     * Get the status property: The status property.
     * 
     * @return the status value.
     */
    @Metadata(generated = true)
    public RealtimeItemStatus getStatus() {
        return this.status;
    }

    /**
     * Set the status property: The status property.
     * 
     * @param status the status value to set.
     * @return the RealtimeRequestFunctionCallItem object itself.
     */
    @Metadata(generated = true)
    public RealtimeRequestFunctionCallItem setStatus(RealtimeItemStatus status) {
        this.status = status;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public RealtimeRequestFunctionCallItem setId(String id) {
        super.setId(id);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", getId());
        jsonWriter.writeStringField("name", this.name);
        jsonWriter.writeStringField("call_id", this.callId);
        jsonWriter.writeStringField("arguments", this.arguments);
        jsonWriter.writeStringField("type", this.type == null ? null : this.type.toString());
        jsonWriter.writeStringField("status", this.status == null ? null : this.status.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RealtimeRequestFunctionCallItem from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RealtimeRequestFunctionCallItem if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RealtimeRequestFunctionCallItem.
     */
    @Metadata(generated = true)
    public static RealtimeRequestFunctionCallItem fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            String name = null;
            String callId = null;
            String arguments = null;
            RealtimeItemType type = RealtimeItemType.FUNCTION_CALL;
            RealtimeItemStatus status = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("name".equals(fieldName)) {
                    name = reader.getString();
                } else if ("call_id".equals(fieldName)) {
                    callId = reader.getString();
                } else if ("arguments".equals(fieldName)) {
                    arguments = reader.getString();
                } else if ("type".equals(fieldName)) {
                    type = RealtimeItemType.fromString(reader.getString());
                } else if ("status".equals(fieldName)) {
                    status = RealtimeItemStatus.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }
            RealtimeRequestFunctionCallItem deserializedRealtimeRequestFunctionCallItem
                = new RealtimeRequestFunctionCallItem(name, callId, arguments);
            deserializedRealtimeRequestFunctionCallItem.setId(id);
            deserializedRealtimeRequestFunctionCallItem.type = type;
            deserializedRealtimeRequestFunctionCallItem.status = status;

            return deserializedRealtimeRequestFunctionCallItem;
        });
    }
}
