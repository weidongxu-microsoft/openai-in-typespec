// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The RunStepDetailsMessageCreationObjectMessageCreation model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class RunStepDetailsMessageCreationObjectMessageCreation
    implements JsonSerializable<RunStepDetailsMessageCreationObjectMessageCreation> {
    /*
     * The ID of the message that was created by this run step.
     */
    @Metadata(generated = true)
    private final String messageId;

    /**
     * Creates an instance of RunStepDetailsMessageCreationObjectMessageCreation class.
     * 
     * @param messageId the messageId value to set.
     */
    @Metadata(generated = true)
    private RunStepDetailsMessageCreationObjectMessageCreation(String messageId) {
        this.messageId = messageId;
    }

    /**
     * Get the messageId property: The ID of the message that was created by this run step.
     * 
     * @return the messageId value.
     */
    @Metadata(generated = true)
    public String getMessageId() {
        return this.messageId;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("message_id", this.messageId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunStepDetailsMessageCreationObjectMessageCreation from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunStepDetailsMessageCreationObjectMessageCreation if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RunStepDetailsMessageCreationObjectMessageCreation.
     */
    @Metadata(generated = true)
    public static RunStepDetailsMessageCreationObjectMessageCreation fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            String messageId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("message_id".equals(fieldName)) {
                    messageId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new RunStepDetailsMessageCreationObjectMessageCreation(messageId);
        });
    }
}
