// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.TypeConditions;
import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The RunObjectIncompleteDetails model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class RunObjectIncompleteDetails implements JsonSerializable<RunObjectIncompleteDetails> {
    /*
     * The reason why the run is incomplete. This will point to which specific token limit was reached over the course
     * of the run.
     */
    @Metadata(generated = true)
    private RunObjectIncompleteDetailsReason reason;

    /**
     * Creates an instance of RunObjectIncompleteDetails class.
     */
    @Metadata(generated = true)
    private RunObjectIncompleteDetails() {
    }

    /**
     * Get the reason property: The reason why the run is incomplete. This will point to which specific token limit was
     * reached over the course of the run.
     * 
     * @return the reason value.
     */
    @Metadata(generated = true)
    public RunObjectIncompleteDetailsReason getReason() {
        return this.reason;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("reason", this.reason == null ? null : this.reason.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunObjectIncompleteDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunObjectIncompleteDetails if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RunObjectIncompleteDetails.
     */
    @Metadata(generated = true)
    public static RunObjectIncompleteDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RunObjectIncompleteDetails deserializedRunObjectIncompleteDetails = new RunObjectIncompleteDetails();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("reason".equals(fieldName)) {
                    deserializedRunObjectIncompleteDetails.reason
                        = RunObjectIncompleteDetailsReason.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRunObjectIncompleteDetails;
        });
    }
}
