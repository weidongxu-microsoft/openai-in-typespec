// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The CreateChatCompletionResponseChoice model.
 */
@Immutable
public final class CreateChatCompletionResponseChoice implements JsonSerializable<CreateChatCompletionResponseChoice> {
    /*
     * The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a
     * provided stop sequence,
     * `length` if the maximum number of tokens specified in the request was reached,
     * `content_filter` if content was omitted due to a flag from our content filters,
     * `tool_calls` if the model called a tool, or `function_call` (deprecated) if the model called a function.
     */
    @Generated
    private final CreateChatCompletionResponseChoiceFinishReason1 finishReason;

    /*
     * The index of the choice in the list of choices.
     */
    @Generated
    private final int index;

    /*
     * The message property.
     */
    @Generated
    private final ChatCompletionResponseMessage message;

    /*
     * Log probability information for the choice.
     */
    @Generated
    private final CreateChatCompletionResponseChoiceLogprobs logprobs;

    /**
     * Creates an instance of CreateChatCompletionResponseChoice class.
     * 
     * @param finishReason the finishReason value to set.
     * @param index the index value to set.
     * @param message the message value to set.
     * @param logprobs the logprobs value to set.
     */
    @Generated
    private CreateChatCompletionResponseChoice(CreateChatCompletionResponseChoiceFinishReason1 finishReason, int index,
        ChatCompletionResponseMessage message, CreateChatCompletionResponseChoiceLogprobs logprobs) {
        this.finishReason = finishReason;
        this.index = index;
        this.message = message;
        this.logprobs = logprobs;
    }

    /**
     * Get the finishReason property: The reason the model stopped generating tokens. This will be `stop` if the model
     * hit a natural stop point or a provided stop sequence,
     * `length` if the maximum number of tokens specified in the request was reached,
     * `content_filter` if content was omitted due to a flag from our content filters,
     * `tool_calls` if the model called a tool, or `function_call` (deprecated) if the model called a function.
     * 
     * @return the finishReason value.
     */
    @Generated
    public CreateChatCompletionResponseChoiceFinishReason1 getFinishReason() {
        return this.finishReason;
    }

    /**
     * Get the index property: The index of the choice in the list of choices.
     * 
     * @return the index value.
     */
    @Generated
    public int getIndex() {
        return this.index;
    }

    /**
     * Get the message property: The message property.
     * 
     * @return the message value.
     */
    @Generated
    public ChatCompletionResponseMessage getMessage() {
        return this.message;
    }

    /**
     * Get the logprobs property: Log probability information for the choice.
     * 
     * @return the logprobs value.
     */
    @Generated
    public CreateChatCompletionResponseChoiceLogprobs getLogprobs() {
        return this.logprobs;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("finish_reason", this.finishReason == null ? null : this.finishReason.toString());
        jsonWriter.writeIntField("index", this.index);
        jsonWriter.writeJsonField("message", this.message);
        jsonWriter.writeJsonField("logprobs", this.logprobs);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateChatCompletionResponseChoice from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateChatCompletionResponseChoice if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CreateChatCompletionResponseChoice.
     */
    @Generated
    public static CreateChatCompletionResponseChoice fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CreateChatCompletionResponseChoiceFinishReason1 finishReason = null;
            int index = 0;
            ChatCompletionResponseMessage message = null;
            CreateChatCompletionResponseChoiceLogprobs logprobs = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("finish_reason".equals(fieldName)) {
                    finishReason = CreateChatCompletionResponseChoiceFinishReason1.fromString(reader.getString());
                } else if ("index".equals(fieldName)) {
                    index = reader.getInt();
                } else if ("message".equals(fieldName)) {
                    message = ChatCompletionResponseMessage.fromJson(reader);
                } else if ("logprobs".equals(fieldName)) {
                    logprobs = CreateChatCompletionResponseChoiceLogprobs.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }
            return new CreateChatCompletionResponseChoice(finishReason, index, message, logprobs);
        });
    }
}
