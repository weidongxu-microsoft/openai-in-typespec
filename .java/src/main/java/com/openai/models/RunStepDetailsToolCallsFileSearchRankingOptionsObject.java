// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ranking options for the file search.
 */
@Immutable
public final class RunStepDetailsToolCallsFileSearchRankingOptionsObject
    implements JsonSerializable<RunStepDetailsToolCallsFileSearchRankingOptionsObject> {
    /*
     * The ranker used for the file search.
     */
    @Generated
    private final String ranker = "default_2024_08_21";

    /*
     * The score threshold for the file search. All values must be a floating point number between 0 and 1.
     */
    @Generated
    private final double scoreThreshold;

    /**
     * Creates an instance of RunStepDetailsToolCallsFileSearchRankingOptionsObject class.
     * 
     * @param scoreThreshold the scoreThreshold value to set.
     */
    @Generated
    private RunStepDetailsToolCallsFileSearchRankingOptionsObject(double scoreThreshold) {
        this.scoreThreshold = scoreThreshold;
    }

    /**
     * Get the ranker property: The ranker used for the file search.
     * 
     * @return the ranker value.
     */
    @Generated
    public String getRanker() {
        return this.ranker;
    }

    /**
     * Get the scoreThreshold property: The score threshold for the file search. All values must be a floating point
     * number between 0 and 1.
     * 
     * @return the scoreThreshold value.
     */
    @Generated
    public double getScoreThreshold() {
        return this.scoreThreshold;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("ranker", this.ranker);
        jsonWriter.writeDoubleField("score_threshold", this.scoreThreshold);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunStepDetailsToolCallsFileSearchRankingOptionsObject from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunStepDetailsToolCallsFileSearchRankingOptionsObject if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RunStepDetailsToolCallsFileSearchRankingOptionsObject.
     */
    @Generated
    public static RunStepDetailsToolCallsFileSearchRankingOptionsObject fromJson(JsonReader jsonReader)
        throws IOException {
        return jsonReader.readObject(reader -> {
            double scoreThreshold = 0.0;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("score_threshold".equals(fieldName)) {
                    scoreThreshold = reader.getDouble();
                } else {
                    reader.skipChildren();
                }
            }
            return new RunStepDetailsToolCallsFileSearchRankingOptionsObject(scoreThreshold);
        });
    }
}
