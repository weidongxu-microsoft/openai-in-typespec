// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.implementation;

import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.PathParam;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.BinaryData;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the FineTuning type.
 */
public final class FineTuningImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final FineTuningService service;

    /**
     * Service host.
     */
    private final String endpoint;

    /**
     * Gets Service host.
     * 
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * Initializes an instance of FineTuning client.
     * 
     * @param endpoint Service host.
     */
    public FineTuningImpl(String endpoint) {
        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy()).build(),
            JacksonAdapter.createDefaultSerializerAdapter(), endpoint);
    }

    /**
     * Initializes an instance of FineTuning client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint Service host.
     */
    public FineTuningImpl(HttpPipeline httpPipeline, String endpoint) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint);
    }

    /**
     * Initializes an instance of FineTuning client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint Service host.
     */
    public FineTuningImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String endpoint) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.service = RestProxy.create(FineTuningService.class, this.httpPipeline, this.getSerializerAdapter());
    }

    /**
     * The interface defining all the services for FineTuning to be used by the proxy service to perform REST calls.
     */
    @Host("{endpoint}")
    @ServiceInterface(name = "FineTuning")
    public interface FineTuningService {
        @Post("/fine_tuning/jobs")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> createFineTuningJob(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, @HeaderParam("Content-Type") String contentType,
            @BodyParam("application/json") BinaryData requestBody, RequestOptions requestOptions, Context context);

        @Post("/fine_tuning/jobs")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> createFineTuningJobSync(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, @HeaderParam("Content-Type") String contentType,
            @BodyParam("application/json") BinaryData requestBody, RequestOptions requestOptions, Context context);

        @Get("/fine_tuning/jobs")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> listPaginatedFineTuningJobs(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/fine_tuning/jobs")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> listPaginatedFineTuningJobsSync(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, RequestOptions requestOptions, Context context);

        @Get("/fine_tuning/jobs/{fine_tuning_job_id}")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> retrieveFineTuningJob(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, @PathParam("fine_tuning_job_id") String fineTuningJobId,
            RequestOptions requestOptions, Context context);

        @Get("/fine_tuning/jobs/{fine_tuning_job_id}")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> retrieveFineTuningJobSync(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, @PathParam("fine_tuning_job_id") String fineTuningJobId,
            RequestOptions requestOptions, Context context);

        @Post("/fine_tuning/jobs/{fine_tuning_job_id}/cancel")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> cancelFineTuningJob(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, @PathParam("fine_tuning_job_id") String fineTuningJobId,
            RequestOptions requestOptions, Context context);

        @Post("/fine_tuning/jobs/{fine_tuning_job_id}/cancel")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> cancelFineTuningJobSync(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, @PathParam("fine_tuning_job_id") String fineTuningJobId,
            RequestOptions requestOptions, Context context);

        @Get("/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> listFineTuningJobCheckpoints(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, @PathParam("fine_tuning_job_id") String fineTuningJobId,
            RequestOptions requestOptions, Context context);

        @Get("/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> listFineTuningJobCheckpointsSync(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, @PathParam("fine_tuning_job_id") String fineTuningJobId,
            RequestOptions requestOptions, Context context);

        @Get("/fine_tuning/jobs/{fine_tuning_job_id}/events")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<BinaryData>> listFineTuningEvents(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, @PathParam("fine_tuning_job_id") String fineTuningJobId,
            RequestOptions requestOptions, Context context);

        @Get("/fine_tuning/jobs/{fine_tuning_job_id}/events")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> listFineTuningEventsSync(@HostParam("endpoint") String endpoint,
            @HeaderParam("accept") String accept, @PathParam("fine_tuning_job_id") String fineTuningJobId,
            RequestOptions requestOptions, Context context);
    }

    /**
     * Creates a fine-tuning job which begins the process of creating a new model from a given dataset.
     * 
     * Response includes details of the enqueued job including job status and the name of the fine-tuned models once
     * complete.
     * 
     * [Learn more about fine-tuning](/docs/guides/fine-tuning).
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     model: String(babbage-002/davinci-002/gpt-3.5-turbo/gpt-4o-mini) (Required)
     *     training_file: String (Required)
     *     hyperparameters (Optional): {
     *         n_epochs: BinaryData (Optional)
     *         batch_size: BinaryData (Optional)
     *         learning_rate_multiplier: BinaryData (Optional)
     *     }
     *     suffix: String (Optional)
     *     validation_file: String (Optional)
     *     integrations (Optional): [
     *          (Optional){
     *             type: String (Required)
     *         }
     *     ]
     *     seed: Integer (Optional)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     user_provided_suffix: String (Optional)
     *     id: String (Required)
     *     created_at: long (Required)
     *     error (Required): {
     *         code: String (Required)
     *         message: String (Required)
     *         param: String (Required)
     *     }
     *     fine_tuned_model: String (Required)
     *     finished_at: Long (Required)
     *     hyperparameters (Required): {
     *         n_epochs: BinaryData (Required)
     *         batch_size: BinaryData (Required)
     *         learning_rate_multiplier: BinaryData (Required)
     *     }
     *     model: String (Required)
     *     object: String (Required)
     *     organization_id: String (Required)
     *     result_files (Required): [
     *         String (Required)
     *     ]
     *     status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *     trained_tokens: Integer (Required)
     *     training_file: String (Required)
     *     validation_file: String (Required)
     *     integrations (Optional): [
     *          (Optional){
     *             type: String (Required)
     *         }
     *     ]
     *     seed: int (Required)
     *     estimated_finish: Long (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestBody The requestBody parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the `fine_tuning.job` object represents a fine-tuning job that has been created through the API along
     * with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> createFineTuningJobWithResponseAsync(BinaryData requestBody,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        final String contentType = "application/json";
        return FluxUtil.withContext(context -> service.createFineTuningJob(this.getEndpoint(), accept, contentType,
            requestBody, requestOptions, context));
    }

    /**
     * Creates a fine-tuning job which begins the process of creating a new model from a given dataset.
     * 
     * Response includes details of the enqueued job including job status and the name of the fine-tuned models once
     * complete.
     * 
     * [Learn more about fine-tuning](/docs/guides/fine-tuning).
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     model: String(babbage-002/davinci-002/gpt-3.5-turbo/gpt-4o-mini) (Required)
     *     training_file: String (Required)
     *     hyperparameters (Optional): {
     *         n_epochs: BinaryData (Optional)
     *         batch_size: BinaryData (Optional)
     *         learning_rate_multiplier: BinaryData (Optional)
     *     }
     *     suffix: String (Optional)
     *     validation_file: String (Optional)
     *     integrations (Optional): [
     *          (Optional){
     *             type: String (Required)
     *         }
     *     ]
     *     seed: Integer (Optional)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     user_provided_suffix: String (Optional)
     *     id: String (Required)
     *     created_at: long (Required)
     *     error (Required): {
     *         code: String (Required)
     *         message: String (Required)
     *         param: String (Required)
     *     }
     *     fine_tuned_model: String (Required)
     *     finished_at: Long (Required)
     *     hyperparameters (Required): {
     *         n_epochs: BinaryData (Required)
     *         batch_size: BinaryData (Required)
     *         learning_rate_multiplier: BinaryData (Required)
     *     }
     *     model: String (Required)
     *     object: String (Required)
     *     organization_id: String (Required)
     *     result_files (Required): [
     *         String (Required)
     *     ]
     *     status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *     trained_tokens: Integer (Required)
     *     training_file: String (Required)
     *     validation_file: String (Required)
     *     integrations (Optional): [
     *          (Optional){
     *             type: String (Required)
     *         }
     *     ]
     *     seed: int (Required)
     *     estimated_finish: Long (Optional)
     * }
     * }
     * </pre>
     * 
     * @param requestBody The requestBody parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the `fine_tuning.job` object represents a fine-tuning job that has been created through the API along
     * with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> createFineTuningJobWithResponse(BinaryData requestBody, RequestOptions requestOptions) {
        final String accept = "application/json";
        final String contentType = "application/json";
        return service.createFineTuningJobSync(this.getEndpoint(), accept, contentType, requestBody, requestOptions,
            Context.NONE);
    }

    /**
     * List your organization's fine-tuning jobs.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>after</td><td>String</td><td>No</td><td>Identifier for the last job from the previous pagination
     * request.</td></tr>
     * <tr><td>limit</td><td>Integer</td><td>No</td><td>Number of fine-tuning jobs to retrieve.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     data (Required): [
     *          (Required){
     *             user_provided_suffix: String (Optional)
     *             id: String (Required)
     *             created_at: long (Required)
     *             error (Required): {
     *                 code: String (Required)
     *                 message: String (Required)
     *                 param: String (Required)
     *             }
     *             fine_tuned_model: String (Required)
     *             finished_at: Long (Required)
     *             hyperparameters (Required): {
     *                 n_epochs: BinaryData (Required)
     *                 batch_size: BinaryData (Required)
     *                 learning_rate_multiplier: BinaryData (Required)
     *             }
     *             model: String (Required)
     *             object: String (Required)
     *             organization_id: String (Required)
     *             result_files (Required): [
     *                 String (Required)
     *             ]
     *             status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *             trained_tokens: Integer (Required)
     *             training_file: String (Required)
     *             validation_file: String (Required)
     *             integrations (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                 }
     *             ]
     *             seed: int (Required)
     *             estimated_finish: Long (Optional)
     *         }
     *     ]
     *     has_more: boolean (Required)
     *     object: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listPaginatedFineTuningJobsWithResponseAsync(RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(
            context -> service.listPaginatedFineTuningJobs(this.getEndpoint(), accept, requestOptions, context));
    }

    /**
     * List your organization's fine-tuning jobs.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>after</td><td>String</td><td>No</td><td>Identifier for the last job from the previous pagination
     * request.</td></tr>
     * <tr><td>limit</td><td>Integer</td><td>No</td><td>Number of fine-tuning jobs to retrieve.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     data (Required): [
     *          (Required){
     *             user_provided_suffix: String (Optional)
     *             id: String (Required)
     *             created_at: long (Required)
     *             error (Required): {
     *                 code: String (Required)
     *                 message: String (Required)
     *                 param: String (Required)
     *             }
     *             fine_tuned_model: String (Required)
     *             finished_at: Long (Required)
     *             hyperparameters (Required): {
     *                 n_epochs: BinaryData (Required)
     *                 batch_size: BinaryData (Required)
     *                 learning_rate_multiplier: BinaryData (Required)
     *             }
     *             model: String (Required)
     *             object: String (Required)
     *             organization_id: String (Required)
     *             result_files (Required): [
     *                 String (Required)
     *             ]
     *             status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *             trained_tokens: Integer (Required)
     *             training_file: String (Required)
     *             validation_file: String (Required)
     *             integrations (Optional): [
     *                  (Optional){
     *                     type: String (Required)
     *                 }
     *             ]
     *             seed: int (Required)
     *             estimated_finish: Long (Optional)
     *         }
     *     ]
     *     has_more: boolean (Required)
     *     object: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listPaginatedFineTuningJobsWithResponse(RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.listPaginatedFineTuningJobsSync(this.getEndpoint(), accept, requestOptions, Context.NONE);
    }

    /**
     * Get info about a fine-tuning job.
     * 
     * [Learn more about fine-tuning](/docs/guides/fine-tuning).
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     user_provided_suffix: String (Optional)
     *     id: String (Required)
     *     created_at: long (Required)
     *     error (Required): {
     *         code: String (Required)
     *         message: String (Required)
     *         param: String (Required)
     *     }
     *     fine_tuned_model: String (Required)
     *     finished_at: Long (Required)
     *     hyperparameters (Required): {
     *         n_epochs: BinaryData (Required)
     *         batch_size: BinaryData (Required)
     *         learning_rate_multiplier: BinaryData (Required)
     *     }
     *     model: String (Required)
     *     object: String (Required)
     *     organization_id: String (Required)
     *     result_files (Required): [
     *         String (Required)
     *     ]
     *     status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *     trained_tokens: Integer (Required)
     *     training_file: String (Required)
     *     validation_file: String (Required)
     *     integrations (Optional): [
     *          (Optional){
     *             type: String (Required)
     *         }
     *     ]
     *     seed: int (Required)
     *     estimated_finish: Long (Optional)
     * }
     * }
     * </pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return info about a fine-tuning job.
     * 
     * [Learn more about fine-tuning](/docs/guides/fine-tuning) along with {@link Response} on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> retrieveFineTuningJobWithResponseAsync(String fineTuningJobId,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.retrieveFineTuningJob(this.getEndpoint(), accept,
            fineTuningJobId, requestOptions, context));
    }

    /**
     * Get info about a fine-tuning job.
     * 
     * [Learn more about fine-tuning](/docs/guides/fine-tuning).
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     user_provided_suffix: String (Optional)
     *     id: String (Required)
     *     created_at: long (Required)
     *     error (Required): {
     *         code: String (Required)
     *         message: String (Required)
     *         param: String (Required)
     *     }
     *     fine_tuned_model: String (Required)
     *     finished_at: Long (Required)
     *     hyperparameters (Required): {
     *         n_epochs: BinaryData (Required)
     *         batch_size: BinaryData (Required)
     *         learning_rate_multiplier: BinaryData (Required)
     *     }
     *     model: String (Required)
     *     object: String (Required)
     *     organization_id: String (Required)
     *     result_files (Required): [
     *         String (Required)
     *     ]
     *     status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *     trained_tokens: Integer (Required)
     *     training_file: String (Required)
     *     validation_file: String (Required)
     *     integrations (Optional): [
     *          (Optional){
     *             type: String (Required)
     *         }
     *     ]
     *     seed: int (Required)
     *     estimated_finish: Long (Optional)
     * }
     * }
     * </pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return info about a fine-tuning job.
     * 
     * [Learn more about fine-tuning](/docs/guides/fine-tuning) along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> retrieveFineTuningJobWithResponse(String fineTuningJobId,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.retrieveFineTuningJobSync(this.getEndpoint(), accept, fineTuningJobId, requestOptions,
            Context.NONE);
    }

    /**
     * Immediately cancel a fine-tune job.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     user_provided_suffix: String (Optional)
     *     id: String (Required)
     *     created_at: long (Required)
     *     error (Required): {
     *         code: String (Required)
     *         message: String (Required)
     *         param: String (Required)
     *     }
     *     fine_tuned_model: String (Required)
     *     finished_at: Long (Required)
     *     hyperparameters (Required): {
     *         n_epochs: BinaryData (Required)
     *         batch_size: BinaryData (Required)
     *         learning_rate_multiplier: BinaryData (Required)
     *     }
     *     model: String (Required)
     *     object: String (Required)
     *     organization_id: String (Required)
     *     result_files (Required): [
     *         String (Required)
     *     ]
     *     status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *     trained_tokens: Integer (Required)
     *     training_file: String (Required)
     *     validation_file: String (Required)
     *     integrations (Optional): [
     *          (Optional){
     *             type: String (Required)
     *         }
     *     ]
     *     seed: int (Required)
     *     estimated_finish: Long (Optional)
     * }
     * }
     * </pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job to cancel.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the `fine_tuning.job` object represents a fine-tuning job that has been created through the API along
     * with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> cancelFineTuningJobWithResponseAsync(String fineTuningJobId,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.cancelFineTuningJob(this.getEndpoint(), accept, fineTuningJobId,
            requestOptions, context));
    }

    /**
     * Immediately cancel a fine-tune job.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     user_provided_suffix: String (Optional)
     *     id: String (Required)
     *     created_at: long (Required)
     *     error (Required): {
     *         code: String (Required)
     *         message: String (Required)
     *         param: String (Required)
     *     }
     *     fine_tuned_model: String (Required)
     *     finished_at: Long (Required)
     *     hyperparameters (Required): {
     *         n_epochs: BinaryData (Required)
     *         batch_size: BinaryData (Required)
     *         learning_rate_multiplier: BinaryData (Required)
     *     }
     *     model: String (Required)
     *     object: String (Required)
     *     organization_id: String (Required)
     *     result_files (Required): [
     *         String (Required)
     *     ]
     *     status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *     trained_tokens: Integer (Required)
     *     training_file: String (Required)
     *     validation_file: String (Required)
     *     integrations (Optional): [
     *          (Optional){
     *             type: String (Required)
     *         }
     *     ]
     *     seed: int (Required)
     *     estimated_finish: Long (Optional)
     * }
     * }
     * </pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job to cancel.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the `fine_tuning.job` object represents a fine-tuning job that has been created through the API along
     * with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> cancelFineTuningJobWithResponse(String fineTuningJobId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.cancelFineTuningJobSync(this.getEndpoint(), accept, fineTuningJobId, requestOptions,
            Context.NONE);
    }

    /**
     * List the checkpoints for a fine-tuning job.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>after</td><td>String</td><td>No</td><td>Identifier for the last checkpoint ID from the previous
     * pagination request.</td></tr>
     * <tr><td>limit</td><td>Integer</td><td>No</td><td>Number of checkpoints to retrieve.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     data (Required): [
     *          (Required){
     *             id: String (Required)
     *             created_at: long (Required)
     *             fine_tuned_model_checkpoint: String (Required)
     *             step_number: int (Required)
     *             metrics (Required): {
     *                 step: Double (Optional)
     *                 train_loss: Double (Optional)
     *                 train_mean_token_accuracy: Double (Optional)
     *                 valid_loss: Double (Optional)
     *                 valid_mean_token_accuracy: Double (Optional)
     *                 full_valid_loss: Double (Optional)
     *                 full_valid_mean_token_accuracy: Double (Optional)
     *             }
     *             fine_tuning_job_id: String (Required)
     *             object: String (Required)
     *         }
     *     ]
     *     object: String (Required)
     *     first_id: String (Optional)
     *     last_id: String (Optional)
     *     has_more: boolean (Required)
     * }
     * }
     * </pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job to get checkpoints for.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listFineTuningJobCheckpointsWithResponseAsync(String fineTuningJobId,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.listFineTuningJobCheckpoints(this.getEndpoint(), accept,
            fineTuningJobId, requestOptions, context));
    }

    /**
     * List the checkpoints for a fine-tuning job.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>after</td><td>String</td><td>No</td><td>Identifier for the last checkpoint ID from the previous
     * pagination request.</td></tr>
     * <tr><td>limit</td><td>Integer</td><td>No</td><td>Number of checkpoints to retrieve.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     data (Required): [
     *          (Required){
     *             id: String (Required)
     *             created_at: long (Required)
     *             fine_tuned_model_checkpoint: String (Required)
     *             step_number: int (Required)
     *             metrics (Required): {
     *                 step: Double (Optional)
     *                 train_loss: Double (Optional)
     *                 train_mean_token_accuracy: Double (Optional)
     *                 valid_loss: Double (Optional)
     *                 valid_mean_token_accuracy: Double (Optional)
     *                 full_valid_loss: Double (Optional)
     *                 full_valid_mean_token_accuracy: Double (Optional)
     *             }
     *             fine_tuning_job_id: String (Required)
     *             object: String (Required)
     *         }
     *     ]
     *     object: String (Required)
     *     first_id: String (Optional)
     *     last_id: String (Optional)
     *     has_more: boolean (Required)
     * }
     * }
     * </pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job to get checkpoints for.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listFineTuningJobCheckpointsWithResponse(String fineTuningJobId,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.listFineTuningJobCheckpointsSync(this.getEndpoint(), accept, fineTuningJobId, requestOptions,
            Context.NONE);
    }

    /**
     * Get status updates for a fine-tuning job.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>after</td><td>String</td><td>No</td><td>Identifier for the last event from the previous pagination
     * request.</td></tr>
     * <tr><td>limit</td><td>Integer</td><td>No</td><td>Number of events to retrieve.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     has_more: boolean (Required)
     *     data (Required): [
     *          (Required){
     *             id: String (Required)
     *             created_at: long (Required)
     *             level: String(info/warn/error) (Required)
     *             message: String (Required)
     *             object: String (Required)
     *         }
     *     ]
     *     object: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job to get events for.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return status updates for a fine-tuning job along with {@link Response} on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listFineTuningEventsWithResponseAsync(String fineTuningJobId,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return FluxUtil.withContext(context -> service.listFineTuningEvents(this.getEndpoint(), accept, fineTuningJobId,
            requestOptions, context));
    }

    /**
     * Get status updates for a fine-tuning job.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>after</td><td>String</td><td>No</td><td>Identifier for the last event from the previous pagination
     * request.</td></tr>
     * <tr><td>limit</td><td>Integer</td><td>No</td><td>Number of events to retrieve.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     has_more: boolean (Required)
     *     data (Required): [
     *          (Required){
     *             id: String (Required)
     *             created_at: long (Required)
     *             level: String(info/warn/error) (Required)
     *             message: String (Required)
     *             object: String (Required)
     *         }
     *     ]
     *     object: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job to get events for.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return status updates for a fine-tuning job along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listFineTuningEventsWithResponse(String fineTuningJobId,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.listFineTuningEventsSync(this.getEndpoint(), accept, fineTuningJobId, requestOptions,
            Context.NONE);
    }
}
