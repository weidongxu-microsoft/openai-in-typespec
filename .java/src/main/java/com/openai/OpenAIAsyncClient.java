// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ServiceClient;
import com.openai.implementation.OpenAIClientImpl;

/**
 * Initializes a new instance of the asynchronous OpenAIClient type.
 */
@ServiceClient(builder = OpenAIClientBuilder.class, isAsync = true)
public final class OpenAIAsyncClient {
    @Generated
    private final OpenAIClientImpl serviceClient;

    /**
     * Initializes an instance of OpenAIAsyncClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    OpenAIAsyncClient(OpenAIClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Gets an instance of AudioAsyncClient class.
     * 
     * @return an instance of AudioAsyncClientclass.
     */
    public AudioAsyncClient getAudioAsyncClient() {
        return new AudioAsyncClient(serviceClient.getAudio());
    }

    /**
     * Gets an instance of AssistantsAsyncClient class.
     * 
     * @return an instance of AssistantsAsyncClientclass.
     */
    public AssistantsAsyncClient getAssistantsAsyncClient() {
        return new AssistantsAsyncClient(serviceClient.getAssistants());
    }

    /**
     * Gets an instance of BatchesAsyncClient class.
     * 
     * @return an instance of BatchesAsyncClientclass.
     */
    public BatchesAsyncClient getBatchesAsyncClient() {
        return new BatchesAsyncClient(serviceClient.getBatches());
    }

    /**
     * Gets an instance of ChatAsyncClient class.
     * 
     * @return an instance of ChatAsyncClientclass.
     */
    public ChatAsyncClient getChatAsyncClient() {
        return new ChatAsyncClient(serviceClient.getChat());
    }

    /**
     * Gets an instance of CompletionsAsyncClient class.
     * 
     * @return an instance of CompletionsAsyncClientclass.
     */
    public CompletionsAsyncClient getCompletionsAsyncClient() {
        return new CompletionsAsyncClient(serviceClient.getCompletions());
    }

    /**
     * Gets an instance of EmbeddingsAsyncClient class.
     * 
     * @return an instance of EmbeddingsAsyncClientclass.
     */
    public EmbeddingsAsyncClient getEmbeddingsAsyncClient() {
        return new EmbeddingsAsyncClient(serviceClient.getEmbeddings());
    }

    /**
     * Gets an instance of FilesAsyncClient class.
     * 
     * @return an instance of FilesAsyncClientclass.
     */
    public FilesAsyncClient getFilesAsyncClient() {
        return new FilesAsyncClient(serviceClient.getFiles());
    }

    /**
     * Gets an instance of FineTuningAsyncClient class.
     * 
     * @return an instance of FineTuningAsyncClientclass.
     */
    public FineTuningAsyncClient getFineTuningAsyncClient() {
        return new FineTuningAsyncClient(serviceClient.getFineTuning());
    }

    /**
     * Gets an instance of ImagesAsyncClient class.
     * 
     * @return an instance of ImagesAsyncClientclass.
     */
    public ImagesAsyncClient getImagesAsyncClient() {
        return new ImagesAsyncClient(serviceClient.getImages());
    }

    /**
     * Gets an instance of MessagesAsyncClient class.
     * 
     * @return an instance of MessagesAsyncClientclass.
     */
    public MessagesAsyncClient getMessagesAsyncClient() {
        return new MessagesAsyncClient(serviceClient.getMessages());
    }

    /**
     * Gets an instance of ModelsAsyncClient class.
     * 
     * @return an instance of ModelsAsyncClientclass.
     */
    public ModelsAsyncClient getModelsAsyncClient() {
        return new ModelsAsyncClient(serviceClient.getModels());
    }

    /**
     * Gets an instance of ModerationsAsyncClient class.
     * 
     * @return an instance of ModerationsAsyncClientclass.
     */
    public ModerationsAsyncClient getModerationsAsyncClient() {
        return new ModerationsAsyncClient(serviceClient.getModerations());
    }

    /**
     * Gets an instance of RealtimeAsyncClient class.
     * 
     * @return an instance of RealtimeAsyncClientclass.
     */
    public RealtimeAsyncClient getRealtimeAsyncClient() {
        return new RealtimeAsyncClient(serviceClient.getRealtime());
    }

    /**
     * Gets an instance of ThreadsAsyncClient class.
     * 
     * @return an instance of ThreadsAsyncClientclass.
     */
    public ThreadsAsyncClient getThreadsAsyncClient() {
        return new ThreadsAsyncClient(serviceClient.getThreads());
    }

    /**
     * Gets an instance of RunsAsyncClient class.
     * 
     * @return an instance of RunsAsyncClientclass.
     */
    public RunsAsyncClient getRunsAsyncClient() {
        return new RunsAsyncClient(serviceClient.getRuns());
    }

    /**
     * Gets an instance of VectorStoresAsyncClient class.
     * 
     * @return an instance of VectorStoresAsyncClientclass.
     */
    public VectorStoresAsyncClient getVectorStoresAsyncClient() {
        return new VectorStoresAsyncClient(serviceClient.getVectorStores());
    }

    /**
     * Gets an instance of UploadsAsyncClient class.
     * 
     * @return an instance of UploadsAsyncClientclass.
     */
    public UploadsAsyncClient getUploadsAsyncClient() {
        return new UploadsAsyncClient(serviceClient.getUploads());
    }
}
