// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.generic.core.annotation.Metadata;
import com.generic.core.annotation.TypeConditions;

/**
 * The CreateFileRequest model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class CreateFileRequest {
    /*
     * The file object (not file name) to be uploaded.
     */
    @Metadata(generated = true)
    private final FileDetails file;

    /*
     * The intended purpose of the uploaded file. Use "fine-tune" for 
     * [Fine-tuning](/docs/api-reference/fine-tuning) and "assistants" for 
     * [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages). This
     * allows us to validate the format of the uploaded file is correct for fine-tuning.
     */
    @Metadata(generated = true)
    private final CreateFileRequestPurpose purpose;

    /**
     * Creates an instance of CreateFileRequest class.
     * 
     * @param file the file value to set.
     * @param purpose the purpose value to set.
     */
    @Metadata(generated = true)
    public CreateFileRequest(FileDetails file, CreateFileRequestPurpose purpose) {
        this.file = file;
        this.purpose = purpose;
    }

    /**
     * Get the file property: The file object (not file name) to be uploaded.
     * 
     * @return the file value.
     */
    @Metadata(generated = true)
    public FileDetails getFile() {
        return this.file;
    }

    /**
     * Get the purpose property: The intended purpose of the uploaded file. Use "fine-tune" for
     * [Fine-tuning](/docs/api-reference/fine-tuning) and "assistants" for
     * [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages). This
     * allows us to validate the format of the uploaded file is correct for fine-tuning.
     * 
     * @return the purpose value.
     */
    @Metadata(generated = true)
    public CreateFileRequestPurpose getPurpose() {
        return this.purpose;
    }
}
