// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.generic.core.annotation.Metadata;
import com.generic.core.annotation.TypeConditions;
import com.generic.json.JsonReader;
import com.generic.json.JsonSerializable;
import com.generic.json.JsonToken;
import com.generic.json.JsonWriter;
import java.io.IOException;

/**
 * A citation within the message that points to a specific quote from a specific File associated
 * with the assistant or the message. Generated when the assistant uses the "retrieval" tool to
 * search files.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class MessageContentTextAnnotationsFileCitationObject
    implements JsonSerializable<MessageContentTextAnnotationsFileCitationObject> {
    /*
     * Always `file_citation`.
     */
    @Metadata(generated = true)
    private final String type = "file_citation";

    /*
     * The text in the message content that needs to be replaced.
     */
    @Metadata(generated = true)
    private final String text;

    /*
     * The file_citation property.
     */
    @Metadata(generated = true)
    private final MessageContentTextAnnotationsFileCitationObjectFileCitation fileCitation;

    /*
     * The start_index property.
     */
    @Metadata(generated = true)
    private final long startIndex;

    /*
     * The end_index property.
     */
    @Metadata(generated = true)
    private final long endIndex;

    /**
     * Creates an instance of MessageContentTextAnnotationsFileCitationObject class.
     * 
     * @param text the text value to set.
     * @param fileCitation the fileCitation value to set.
     * @param startIndex the startIndex value to set.
     * @param endIndex the endIndex value to set.
     */
    @Metadata(generated = true)
    private MessageContentTextAnnotationsFileCitationObject(String text,
        MessageContentTextAnnotationsFileCitationObjectFileCitation fileCitation, long startIndex, long endIndex) {
        this.text = text;
        this.fileCitation = fileCitation;
        this.startIndex = startIndex;
        this.endIndex = endIndex;
    }

    /**
     * Get the type property: Always `file_citation`.
     * 
     * @return the type value.
     */
    @Metadata(generated = true)
    public String getType() {
        return this.type;
    }

    /**
     * Get the text property: The text in the message content that needs to be replaced.
     * 
     * @return the text value.
     */
    @Metadata(generated = true)
    public String getText() {
        return this.text;
    }

    /**
     * Get the fileCitation property: The file_citation property.
     * 
     * @return the fileCitation value.
     */
    @Metadata(generated = true)
    public MessageContentTextAnnotationsFileCitationObjectFileCitation getFileCitation() {
        return this.fileCitation;
    }

    /**
     * Get the startIndex property: The start_index property.
     * 
     * @return the startIndex value.
     */
    @Metadata(generated = true)
    public long getStartIndex() {
        return this.startIndex;
    }

    /**
     * Get the endIndex property: The end_index property.
     * 
     * @return the endIndex value.
     */
    @Metadata(generated = true)
    public long getEndIndex() {
        return this.endIndex;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type);
        jsonWriter.writeStringField("text", this.text);
        jsonWriter.writeJsonField("file_citation", this.fileCitation);
        jsonWriter.writeLongField("start_index", this.startIndex);
        jsonWriter.writeLongField("end_index", this.endIndex);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MessageContentTextAnnotationsFileCitationObject from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MessageContentTextAnnotationsFileCitationObject if the JsonReader was pointing to an
     * instance of it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MessageContentTextAnnotationsFileCitationObject.
     */
    @Metadata(generated = true)
    public static MessageContentTextAnnotationsFileCitationObject fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String text = null;
            MessageContentTextAnnotationsFileCitationObjectFileCitation fileCitation = null;
            long startIndex = 0L;
            long endIndex = 0L;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("text".equals(fieldName)) {
                    text = reader.getString();
                } else if ("file_citation".equals(fieldName)) {
                    fileCitation = MessageContentTextAnnotationsFileCitationObjectFileCitation.fromJson(reader);
                } else if ("start_index".equals(fieldName)) {
                    startIndex = reader.getLong();
                } else if ("end_index".equals(fieldName)) {
                    endIndex = reader.getLong();
                } else {
                    reader.skipChildren();
                }
            }
            return new MessageContentTextAnnotationsFileCitationObject(text, fileCitation, startIndex, endIndex);
        });
    }
}
