// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.generic.core.annotation.Metadata;
import com.generic.core.annotation.TypeConditions;
import com.generic.json.JsonReader;
import com.generic.json.JsonSerializable;
import com.generic.json.JsonToken;
import com.generic.json.JsonWriter;
import java.io.IOException;

/**
 * The ChatCompletionRequestToolMessage model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class ChatCompletionRequestToolMessage implements JsonSerializable<ChatCompletionRequestToolMessage> {
    /*
     * The role of the messages author, in this case `tool`.
     */
    @Metadata(generated = true)
    private final String role = "tool";

    /*
     * The contents of the tool message.
     */
    @Metadata(generated = true)
    private final String content;

    /*
     * Tool call that this message is responding to.
     */
    @Metadata(generated = true)
    private final String toolCallId;

    /**
     * Creates an instance of ChatCompletionRequestToolMessage class.
     * 
     * @param content the content value to set.
     * @param toolCallId the toolCallId value to set.
     */
    @Metadata(generated = true)
    public ChatCompletionRequestToolMessage(String content, String toolCallId) {
        this.content = content;
        this.toolCallId = toolCallId;
    }

    /**
     * Get the role property: The role of the messages author, in this case `tool`.
     * 
     * @return the role value.
     */
    @Metadata(generated = true)
    public String getRole() {
        return this.role;
    }

    /**
     * Get the content property: The contents of the tool message.
     * 
     * @return the content value.
     */
    @Metadata(generated = true)
    public String getContent() {
        return this.content;
    }

    /**
     * Get the toolCallId property: Tool call that this message is responding to.
     * 
     * @return the toolCallId value.
     */
    @Metadata(generated = true)
    public String getToolCallId() {
        return this.toolCallId;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("role", this.role);
        jsonWriter.writeStringField("content", this.content);
        jsonWriter.writeStringField("tool_call_id", this.toolCallId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ChatCompletionRequestToolMessage from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ChatCompletionRequestToolMessage if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the ChatCompletionRequestToolMessage.
     */
    @Metadata(generated = true)
    public static ChatCompletionRequestToolMessage fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String content = null;
            String toolCallId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("content".equals(fieldName)) {
                    content = reader.getString();
                } else if ("tool_call_id".equals(fieldName)) {
                    toolCallId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new ChatCompletionRequestToolMessage(content, toolCallId);
        });
    }
}
