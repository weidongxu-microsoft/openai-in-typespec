// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.generic.core.annotation.Metadata;
import com.generic.core.models.ExpandableStringEnum;
import java.util.Collection;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

/**
 * Defines values for CreateSpeechRequestModel.
 */
public final class CreateSpeechRequestModel implements ExpandableStringEnum<CreateSpeechRequestModel> {
    public static final Map<String, CreateSpeechRequestModel> VALUES = new ConcurrentHashMap<>();

    /**
     * Static value tts-1 for CreateSpeechRequestModel.
     */
    @Metadata(generated = true)
    public static final CreateSpeechRequestModel TTS_1 = fromString("tts-1");

    /**
     * Static value tts-1-hd for CreateSpeechRequestModel.
     */
    @Metadata(generated = true)
    public static final CreateSpeechRequestModel TTS_1_HD = fromString("tts-1-hd");

    private final String name;

    private CreateSpeechRequestModel(String name) {
        this.name = name;
    }

    /**
     * Creates or finds a CreateSpeechRequestModel from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding CreateSpeechRequestModel.
     */
    @Metadata(generated = true)
    public static CreateSpeechRequestModel fromString(String name) {
        if (name == null) {
            return null;
        }
        CreateSpeechRequestModel value = VALUES.get(name);
        if (value != null) {
            return value;
        }
        return VALUES.computeIfAbsent(name, key -> new CreateSpeechRequestModel(key));
    }

    /**
     * Gets known CreateSpeechRequestModel values.
     * 
     * @return known CreateSpeechRequestModel values.
     */
    @Metadata(generated = true)
    public static Collection<CreateSpeechRequestModel> values() {
        return VALUES.values();
    }

    @Override
    public String toString() {
        return name;
    }
}
