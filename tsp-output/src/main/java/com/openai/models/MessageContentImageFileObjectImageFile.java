// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.generic.core.annotation.Metadata;
import com.generic.core.annotation.TypeConditions;
import com.generic.json.JsonReader;
import com.generic.json.JsonSerializable;
import com.generic.json.JsonToken;
import com.generic.json.JsonWriter;
import java.io.IOException;

/**
 * The MessageContentImageFileObjectImageFile model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class MessageContentImageFileObjectImageFile
    implements JsonSerializable<MessageContentImageFileObjectImageFile> {
    /*
     * The [File](/docs/api-reference/files) ID of the image in the message content.
     */
    @Metadata(generated = true)
    private final String fileId;

    /**
     * Creates an instance of MessageContentImageFileObjectImageFile class.
     * 
     * @param fileId the fileId value to set.
     */
    @Metadata(generated = true)
    private MessageContentImageFileObjectImageFile(String fileId) {
        this.fileId = fileId;
    }

    /**
     * Get the fileId property: The [File](/docs/api-reference/files) ID of the image in the message content.
     * 
     * @return the fileId value.
     */
    @Metadata(generated = true)
    public String getFileId() {
        return this.fileId;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("file_id", this.fileId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MessageContentImageFileObjectImageFile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MessageContentImageFileObjectImageFile if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the MessageContentImageFileObjectImageFile.
     */
    @Metadata(generated = true)
    public static MessageContentImageFileObjectImageFile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String fileId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("file_id".equals(fieldName)) {
                    fileId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new MessageContentImageFileObjectImageFile(fileId);
        });
    }
}
