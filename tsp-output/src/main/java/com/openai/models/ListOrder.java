// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.generic.core.annotation.Metadata;
import com.generic.core.models.ExpandableStringEnum;
import java.util.Collection;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

/**
 * Defines values for ListOrder.
 */
public final class ListOrder implements ExpandableStringEnum<ListOrder> {
    public static final Map<String, ListOrder> VALUES = new ConcurrentHashMap<>();

    /**
     * Static value asc for ListOrder.
     */
    @Metadata(generated = true)
    public static final ListOrder ASC = fromString("asc");

    /**
     * Static value desc for ListOrder.
     */
    @Metadata(generated = true)
    public static final ListOrder DESC = fromString("desc");

    private final String name;

    private ListOrder(String name) {
        this.name = name;
    }

    /**
     * Creates or finds a ListOrder from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding ListOrder.
     */
    @Metadata(generated = true)
    public static ListOrder fromString(String name) {
        if (name == null) {
            return null;
        }
        ListOrder value = VALUES.get(name);
        if (value != null) {
            return value;
        }
        return VALUES.computeIfAbsent(name, key -> new ListOrder(key));
    }

    /**
     * Gets known ListOrder values.
     * 
     * @return known ListOrder values.
     */
    @Metadata(generated = true)
    public static Collection<ListOrder> values() {
        return VALUES.values();
    }

    @Override
    public String toString() {
        return name;
    }
}
