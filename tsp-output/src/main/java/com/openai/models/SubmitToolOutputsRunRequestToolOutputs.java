// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.generic.core.annotation.Metadata;
import com.generic.core.annotation.TypeConditions;
import com.generic.json.JsonReader;
import com.generic.json.JsonSerializable;
import com.generic.json.JsonToken;
import com.generic.json.JsonWriter;
import java.io.IOException;

/**
 * The SubmitToolOutputsRunRequestToolOutputs model.
 */
@Metadata(conditions = { TypeConditions.FLUENT })
public final class SubmitToolOutputsRunRequestToolOutputs
    implements JsonSerializable<SubmitToolOutputsRunRequestToolOutputs> {
    /*
     * The ID of the tool call in the `required_action` object within the run object the output is
     * being submitted for.
     */
    @Metadata(generated = true)
    private String toolCallId;

    /*
     * The output of the tool call to be submitted to continue the run.
     */
    @Metadata(generated = true)
    private String output;

    /**
     * Creates an instance of SubmitToolOutputsRunRequestToolOutputs class.
     */
    @Metadata(generated = true)
    public SubmitToolOutputsRunRequestToolOutputs() {
    }

    /**
     * Get the toolCallId property: The ID of the tool call in the `required_action` object within the run object the
     * output is
     * being submitted for.
     * 
     * @return the toolCallId value.
     */
    @Metadata(generated = true)
    public String getToolCallId() {
        return this.toolCallId;
    }

    /**
     * Set the toolCallId property: The ID of the tool call in the `required_action` object within the run object the
     * output is
     * being submitted for.
     * 
     * @param toolCallId the toolCallId value to set.
     * @return the SubmitToolOutputsRunRequestToolOutputs object itself.
     */
    @Metadata(generated = true)
    public SubmitToolOutputsRunRequestToolOutputs setToolCallId(String toolCallId) {
        this.toolCallId = toolCallId;
        return this;
    }

    /**
     * Get the output property: The output of the tool call to be submitted to continue the run.
     * 
     * @return the output value.
     */
    @Metadata(generated = true)
    public String getOutput() {
        return this.output;
    }

    /**
     * Set the output property: The output of the tool call to be submitted to continue the run.
     * 
     * @param output the output value to set.
     * @return the SubmitToolOutputsRunRequestToolOutputs object itself.
     */
    @Metadata(generated = true)
    public SubmitToolOutputsRunRequestToolOutputs setOutput(String output) {
        this.output = output;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("tool_call_id", this.toolCallId);
        jsonWriter.writeStringField("output", this.output);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SubmitToolOutputsRunRequestToolOutputs from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SubmitToolOutputsRunRequestToolOutputs if the JsonReader was pointing to an instance of
     * it, or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SubmitToolOutputsRunRequestToolOutputs.
     */
    @Metadata(generated = true)
    public static SubmitToolOutputsRunRequestToolOutputs fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SubmitToolOutputsRunRequestToolOutputs deserializedSubmitToolOutputsRunRequestToolOutputs
                = new SubmitToolOutputsRunRequestToolOutputs();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("tool_call_id".equals(fieldName)) {
                    deserializedSubmitToolOutputsRunRequestToolOutputs.toolCallId = reader.getString();
                } else if ("output".equals(fieldName)) {
                    deserializedSubmitToolOutputsRunRequestToolOutputs.output = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSubmitToolOutputsRunRequestToolOutputs;
        });
    }
}
