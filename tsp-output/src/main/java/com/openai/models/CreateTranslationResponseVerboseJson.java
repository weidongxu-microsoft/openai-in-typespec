// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.models;

import com.generic.core.annotation.Metadata;
import com.generic.core.annotation.TypeConditions;
import com.generic.json.JsonReader;
import com.generic.json.JsonSerializable;
import com.generic.json.JsonToken;
import com.generic.json.JsonWriter;
import java.io.IOException;
import java.time.Duration;
import java.util.List;

/**
 * The CreateTranslationResponseVerboseJson model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class CreateTranslationResponseVerboseJson
    implements JsonSerializable<CreateTranslationResponseVerboseJson> {
    /*
     * The task label.
     */
    @Metadata(generated = true)
    private final String task = "translate";

    /*
     * The language of the output translation (always `english`).
     */
    @Metadata(generated = true)
    private final String language;

    /*
     * The duration of the input audio.
     */
    @Metadata(generated = true)
    private final double duration;

    /*
     * The translated text.
     */
    @Metadata(generated = true)
    private final String text;

    /*
     * Segments of the translated text and their corresponding details.
     */
    @Metadata(generated = true)
    private List<TranscriptionSegment> segments;

    /**
     * Creates an instance of CreateTranslationResponseVerboseJson class.
     * 
     * @param language the language value to set.
     * @param duration the duration value to set.
     * @param text the text value to set.
     */
    @Metadata(generated = true)
    private CreateTranslationResponseVerboseJson(String language, Duration duration, String text) {
        this.language = language;
        if (duration == null) {
            this.duration = 0.0;
        } else {
            this.duration = (double) duration.toNanos() / 1000_000_000L;
        }
        this.text = text;
    }

    /**
     * Get the task property: The task label.
     * 
     * @return the task value.
     */
    @Metadata(generated = true)
    public String getTask() {
        return this.task;
    }

    /**
     * Get the language property: The language of the output translation (always `english`).
     * 
     * @return the language value.
     */
    @Metadata(generated = true)
    public String getLanguage() {
        return this.language;
    }

    /**
     * Get the duration property: The duration of the input audio.
     * 
     * @return the duration value.
     */
    @Metadata(generated = true)
    public Duration getDuration() {
        return Duration.ofNanos((long) (this.duration * 1000_000_000L));
    }

    /**
     * Get the text property: The translated text.
     * 
     * @return the text value.
     */
    @Metadata(generated = true)
    public String getText() {
        return this.text;
    }

    /**
     * Get the segments property: Segments of the translated text and their corresponding details.
     * 
     * @return the segments value.
     */
    @Metadata(generated = true)
    public List<TranscriptionSegment> getSegments() {
        return this.segments;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("task", this.task);
        jsonWriter.writeStringField("language", this.language);
        jsonWriter.writeDoubleField("duration", this.duration);
        jsonWriter.writeStringField("text", this.text);
        jsonWriter.writeArrayField("segments", this.segments, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateTranslationResponseVerboseJson from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateTranslationResponseVerboseJson if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CreateTranslationResponseVerboseJson.
     */
    @Metadata(generated = true)
    public static CreateTranslationResponseVerboseJson fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String language = null;
            Duration duration = null;
            String text = null;
            List<TranscriptionSegment> segments = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("language".equals(fieldName)) {
                    language = reader.getString();
                } else if ("duration".equals(fieldName)) {
                    duration = Duration.ofNanos((long) (reader.getDouble() * 1000_000_000L));
                } else if ("text".equals(fieldName)) {
                    text = reader.getString();
                } else if ("segments".equals(fieldName)) {
                    segments = reader.readArray(reader1 -> TranscriptionSegment.fromJson(reader1));
                } else {
                    reader.skipChildren();
                }
            }
            CreateTranslationResponseVerboseJson deserializedCreateTranslationResponseVerboseJson
                = new CreateTranslationResponseVerboseJson(language, duration, text);
            deserializedCreateTranslationResponseVerboseJson.segments = segments;

            return deserializedCreateTranslationResponseVerboseJson;
        });
    }
}
