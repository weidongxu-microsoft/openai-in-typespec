// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.implementation;

import com.generic.core.annotation.ServiceInterface;
import com.generic.core.http.Response;
import com.generic.core.http.RestProxy;
import com.generic.core.http.annotation.BodyParam;
import com.generic.core.http.annotation.HeaderParam;
import com.generic.core.http.annotation.HttpRequestInformation;
import com.generic.core.http.annotation.PathParam;
import com.generic.core.http.annotation.UnexpectedResponseExceptionInformation;
import com.generic.core.http.exception.HttpResponseException;
import com.generic.core.http.models.HttpMethod;
import com.generic.core.http.models.RequestOptions;
import com.generic.core.models.BinaryData;
import com.generic.core.models.Context;

/**
 * An instance of this class provides access to all the operations defined in FineTunings.
 */
public final class FineTuningsImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final FineTuningsService service;

    /**
     * The service client containing this operation class.
     */
    private final OpenAIClientImpl client;

    /**
     * Initializes an instance of FineTuningsImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    FineTuningsImpl(OpenAIClientImpl client) {
        this.service = RestProxy.create(FineTuningsService.class, client.getHttpPipeline());
        this.client = client;
    }

    /**
     * The interface defining all the services for OpenAIClientFineTunings to be used by the proxy service to perform
     * REST calls.
     */
    @ServiceInterface(name = "OpenAIClientFineTuni", host = "https://api.openai.com/v1")
    public interface FineTuningsService {
        @HttpRequestInformation(method = HttpMethod.POST, path = "/fine_tuning/jobs", expectedStatusCodes = { 200 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "RESOURCE_MODIFIED", statusCode = { 409 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "RESOURCE_NOT_FOUND", statusCode = { 404 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "CLIENT_AUTHENTICATION", statusCode = { 401 })
        @UnexpectedResponseExceptionInformation
        Response<BinaryData> createFineTuningJobSync(@HeaderParam("accept") String accept,
            @BodyParam("application/json") BinaryData job, RequestOptions requestOptions, Context context);

        @HttpRequestInformation(method = HttpMethod.GET, path = "/fine_tuning/jobs", expectedStatusCodes = { 200 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "RESOURCE_MODIFIED", statusCode = { 409 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "RESOURCE_NOT_FOUND", statusCode = { 404 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "CLIENT_AUTHENTICATION", statusCode = { 401 })
        @UnexpectedResponseExceptionInformation
        Response<BinaryData> listPaginatedFineTuningJobsSync(@HeaderParam("accept") String accept,
            RequestOptions requestOptions, Context context);

        @HttpRequestInformation(
            method = HttpMethod.GET,
            path = "/fine_tuning/jobs/{fine_tuning_job_id}",
            expectedStatusCodes = { 200 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "RESOURCE_MODIFIED", statusCode = { 409 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "RESOURCE_NOT_FOUND", statusCode = { 404 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "CLIENT_AUTHENTICATION", statusCode = { 401 })
        @UnexpectedResponseExceptionInformation
        Response<BinaryData> retrieveFineTuningJobSync(@PathParam("fine_tuning_job_id") String fineTuningJobId,
            @HeaderParam("accept") String accept, RequestOptions requestOptions, Context context);

        @HttpRequestInformation(
            method = HttpMethod.POST,
            path = "/fine_tuning/jobs/{fine_tuning_job_id}/cancel",
            expectedStatusCodes = { 200 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "RESOURCE_MODIFIED", statusCode = { 409 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "RESOURCE_NOT_FOUND", statusCode = { 404 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "CLIENT_AUTHENTICATION", statusCode = { 401 })
        @UnexpectedResponseExceptionInformation
        Response<BinaryData> cancelFineTuningJobSync(@PathParam("fine_tuning_job_id") String fineTuningJobId,
            @HeaderParam("accept") String accept, RequestOptions requestOptions, Context context);

        @HttpRequestInformation(
            method = HttpMethod.GET,
            path = "/fine_tuning/jobs/{fine_tuning_job_id}/events",
            expectedStatusCodes = { 200 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "RESOURCE_MODIFIED", statusCode = { 409 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "RESOURCE_NOT_FOUND", statusCode = { 404 })
        @UnexpectedResponseExceptionInformation(exceptionTypeName = "CLIENT_AUTHENTICATION", statusCode = { 401 })
        @UnexpectedResponseExceptionInformation
        Response<BinaryData> listFineTuningEventsSync(@PathParam("fine_tuning_job_id") String fineTuningJobId,
            @HeaderParam("accept") String accept, RequestOptions requestOptions, Context context);
    }

    /**
     * Creates a fine-tuning job which begins the process of creating a new model from a given dataset.
     * 
     * Response includes details of the enqueued job including job status and the name of the fine-tuned models once
     * complete.
     * 
     * [Learn more about fine-tuning](/docs/guides/fine-tuning).
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     model: String(babbage-002/davinci-002/gpt-3.5-turbo) (Required)
     *     training_file: String (Required)
     *     hyperparameters (Optional): {
     *         batch_size: BinaryData (Optional)
     *         learning_rate_multiplier: BinaryData (Optional)
     *         n_epochs: BinaryData (Optional)
     *     }
     *     suffix: String (Optional)
     *     validation_file: String (Optional)
     * }
     * }</pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     id: String (Required)
     *     created_at: long (Required)
     *     error (Required): {
     *         code: String (Required)
     *         message: String (Required)
     *         param: String (Required)
     *     }
     *     fine_tuned_model: String (Required)
     *     finished_at: Long (Required)
     *     hyperparameters (Required): {
     *         n_epochs: BinaryData (Required)
     *     }
     *     model: String (Required)
     *     object: String (Required)
     *     organization_id: String (Required)
     *     result_files (Required): [
     *         String (Required)
     *     ]
     *     status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *     trained_tokens: Long (Required)
     *     training_file: String (Required)
     *     validation_file: String (Required)
     * }
     * }</pre>
     * 
     * @param job The job parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    public Response<BinaryData> createFineTuningJobWithResponse(BinaryData job, RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.createFineTuningJobSync(accept, job, requestOptions, Context.NONE);
    }

    /**
     * List your organization's fine-tuning jobs.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>after</td><td>String</td><td>No</td><td>Identifier for the last job from the previous pagination
     * request.</td></tr>
     * <tr><td>limit</td><td>Integer</td><td>No</td><td>Number of fine-tuning jobs to retrieve.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     data (Required): [
     *          (Required){
     *             id: String (Required)
     *             created_at: long (Required)
     *             error (Required): {
     *                 code: String (Required)
     *                 message: String (Required)
     *                 param: String (Required)
     *             }
     *             fine_tuned_model: String (Required)
     *             finished_at: Long (Required)
     *             hyperparameters (Required): {
     *                 n_epochs: BinaryData (Required)
     *             }
     *             model: String (Required)
     *             object: String (Required)
     *             organization_id: String (Required)
     *             result_files (Required): [
     *                 String (Required)
     *             ]
     *             status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *             trained_tokens: Long (Required)
     *             training_file: String (Required)
     *             validation_file: String (Required)
     *         }
     *     ]
     *     has_more: boolean (Required)
     *     object: String (Required)
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    public Response<BinaryData> listPaginatedFineTuningJobsWithResponse(RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.listPaginatedFineTuningJobsSync(accept, requestOptions, Context.NONE);
    }

    /**
     * Get info about a fine-tuning job.
     * 
     * [Learn more about fine-tuning](/docs/guides/fine-tuning).
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     id: String (Required)
     *     created_at: long (Required)
     *     error (Required): {
     *         code: String (Required)
     *         message: String (Required)
     *         param: String (Required)
     *     }
     *     fine_tuned_model: String (Required)
     *     finished_at: Long (Required)
     *     hyperparameters (Required): {
     *         n_epochs: BinaryData (Required)
     *     }
     *     model: String (Required)
     *     object: String (Required)
     *     organization_id: String (Required)
     *     result_files (Required): [
     *         String (Required)
     *     ]
     *     status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *     trained_tokens: Long (Required)
     *     training_file: String (Required)
     *     validation_file: String (Required)
     * }
     * }</pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    public Response<BinaryData> retrieveFineTuningJobWithResponse(String fineTuningJobId,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.retrieveFineTuningJobSync(fineTuningJobId, accept, requestOptions, Context.NONE);
    }

    /**
     * Immediately cancel a fine-tune job.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     id: String (Required)
     *     created_at: long (Required)
     *     error (Required): {
     *         code: String (Required)
     *         message: String (Required)
     *         param: String (Required)
     *     }
     *     fine_tuned_model: String (Required)
     *     finished_at: Long (Required)
     *     hyperparameters (Required): {
     *         n_epochs: BinaryData (Required)
     *     }
     *     model: String (Required)
     *     object: String (Required)
     *     organization_id: String (Required)
     *     result_files (Required): [
     *         String (Required)
     *     ]
     *     status: String(validating_files/queued/running/succeeded/failed/cancelled) (Required)
     *     trained_tokens: Long (Required)
     *     training_file: String (Required)
     *     validation_file: String (Required)
     * }
     * }</pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job to cancel.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    public Response<BinaryData> cancelFineTuningJobWithResponse(String fineTuningJobId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.cancelFineTuningJobSync(fineTuningJobId, accept, requestOptions, Context.NONE);
    }

    /**
     * Get status updates for a fine-tuning job.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>after</td><td>String</td><td>No</td><td>Identifier for the last event from the previous pagination
     * request.</td></tr>
     * <tr><td>limit</td><td>Integer</td><td>No</td><td>Number of events to retrieve.</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     data (Required): [
     *          (Required){
     *             id: String (Required)
     *             created_at: long (Required)
     *             level: String(info/warn/error) (Required)
     *             message: String (Required)
     *             object: String (Required)
     *         }
     *     ]
     *     object: String (Required)
     * }
     * }</pre>
     * 
     * @param fineTuningJobId The ID of the fine-tuning job to get events for.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    public Response<BinaryData> listFineTuningEventsWithResponse(String fineTuningJobId,
        RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.listFineTuningEventsSync(fineTuningJobId, accept, requestOptions, Context.NONE);
    }
}
