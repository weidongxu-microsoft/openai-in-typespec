// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai;

import com.generic.core.annotation.Metadata;
import com.generic.core.annotation.ServiceClient;
import com.generic.core.http.Response;
import com.generic.core.http.exception.HttpResponseException;
import com.generic.core.http.models.RequestOptions;
import com.generic.core.models.BinaryData;
import com.openai.implementation.ModelsImpl;
import com.openai.models.DeleteModelResponse;
import com.openai.models.ListModelsResponse;
import com.openai.models.Model;

/**
 * Initializes a new instance of the synchronous OpenAIClient type.
 */
@ServiceClient(builder = OpenAIClientBuilder.class)
public final class ModelsClient {
    @Metadata(generated = true)
    private final ModelsImpl serviceClient;

    /**
     * Initializes an instance of ModelsClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Metadata(generated = true)
    ModelsClient(ModelsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Lists the currently available models, and provides basic information about each one such as the
     * owner and availability.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     object: String (Required)
     *     data (Required): [
     *          (Required){
     *             id: String (Required)
     *             created: long (Required)
     *             object: String (Required)
     *             owned_by: String (Required)
     *         }
     *     ]
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<BinaryData> listModelsWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.listModelsWithResponse(requestOptions);
    }

    /**
     * Retrieves a model instance, providing basic information about the model such as the owner and
     * permissioning.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     id: String (Required)
     *     created: long (Required)
     *     object: String (Required)
     *     owned_by: String (Required)
     * }
     * }</pre>
     * 
     * @param model The ID of the model to use for this request.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return describes an OpenAI model offering that can be used with the API.
     */
    @Metadata(generated = true)
    public Response<BinaryData> retrieveWithResponse(String model, RequestOptions requestOptions) {
        return this.serviceClient.retrieveWithResponse(model, requestOptions);
    }

    /**
     * Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     id: String (Required)
     *     deleted: boolean (Required)
     *     object: String (Required)
     * }
     * }</pre>
     * 
     * @param model The model to delete.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<BinaryData> deleteWithResponse(String model, RequestOptions requestOptions) {
        return this.serviceClient.deleteWithResponse(model, requestOptions);
    }

    /**
     * Lists the currently available models, and provides basic information about each one such as the
     * owner and availability.
     * 
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Metadata(generated = true)
    public ListModelsResponse listModels() {
        // Generated convenience method for listModelsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return listModelsWithResponse(requestOptions).getValue().toObject(ListModelsResponse.class);
    }

    /**
     * Retrieves a model instance, providing basic information about the model such as the owner and
     * permissioning.
     * 
     * @param model The ID of the model to use for this request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes an OpenAI model offering that can be used with the API.
     */
    @Metadata(generated = true)
    public Model retrieve(String model) {
        // Generated convenience method for retrieveWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return retrieveWithResponse(model, requestOptions).getValue().toObject(Model.class);
    }

    /**
     * Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
     * 
     * @param model The model to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Metadata(generated = true)
    public DeleteModelResponse delete(String model) {
        // Generated convenience method for deleteWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return deleteWithResponse(model, requestOptions).getValue().toObject(DeleteModelResponse.class);
    }
}
